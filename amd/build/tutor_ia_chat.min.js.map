{"version":3,"file":"tutor_ia_chat.min.js","sources":["../src/tutor_ia_chat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tutor-IA Chat - Drawer y funcionalidad del chat (basado en aiplacement_courseassist)\n *\n * @module     local_datacurso/tutor_ia_chat\n * @copyright  2025 Datacurso\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/pubsub'\n], function(\n    $,\n    Ajax,\n    Notification,\n    PubSub\n) {\n    'use strict';\n\n    const SELECTORS = {\n        TOGGLE_BTN: '[data-action=\"tutor-ia-toggle\"]',\n        DRAWER: '.tutor-ia-drawer',\n        CLOSE_BTN: '.tutor-ia-close-button',\n        MESSAGES: '[data-region=\"tutor-ia-messages\"]',\n        INPUT: '[data-region=\"tutor-ia-input\"]',\n        SEND_BTN: '[data-action=\"send-message\"]',\n        PAGE: '#page',\n        JUMP_TO: '#jump-to'\n    };\n\n    class TutorIAChat {\n        constructor(root, uniqueId, courseId, userId) {\n            this.root = $(root);\n            this.uniqueId = uniqueId;\n            this.courseId = courseId;\n            this.userId = userId;\n            this.streaming = false;\n            this.currentEventSource = null;\n            this.currentSessionId = null;\n            this.currentAIMessageEl = null;\n\n            this.drawerElement = document.querySelector(SELECTORS.DRAWER);\n            this.pageElement = document.querySelector(SELECTORS.PAGE);\n            this.toggleButton = document.querySelector(SELECTORS.TOGGLE_BTN);\n            this.closeButton = document.querySelector(SELECTORS.CLOSE_BTN);\n            this.jumpTo = document.querySelector(SELECTORS.JUMP_TO);\n\n            this.init();\n        }\n\n        init() {\n            this.registerEventListeners();\n            window.addEventListener('beforeunload', () => this.cleanup());\n        }\n\n        registerEventListeners() {\n            // Toggle button\n            if (this.toggleButton) {\n                this.toggleButton.addEventListener('click', (e) => {\n                    e.preventDefault();\n                    this.toggleDrawer();\n                });\n            }\n\n            // Close button\n            if (this.closeButton) {\n                this.closeButton.addEventListener('click', (e) => {\n                    e.preventDefault();\n                    this.closeDrawer();\n                });\n            }\n\n            // Send button\n            this.root.find(SELECTORS.SEND_BTN).on('click', () => {\n                this.sendMessage();\n            });\n\n            // Input - Enter to send\n            const input = this.root.find(SELECTORS.INPUT);\n            input.on('keydown', (e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    this.sendMessage();\n                }\n            });\n\n            // Auto-resize textarea\n            input.on('input', function() {\n                this.style.height = 'auto';\n                this.style.height = Math.min(this.scrollHeight, 120) + 'px';\n            });\n\n            // Close on Escape key\n            document.addEventListener('keydown', (e) => {\n                if (this.isDrawerOpen() && e.key === 'Escape') {\n                    this.closeDrawer();\n                }\n            });\n\n            // Close drawer if message drawer opens\n            PubSub.subscribe('core_message/drawer_shown', () => {\n                if (this.isDrawerOpen()) {\n                    this.closeDrawer();\n                }\n            });\n\n            // Jump to functionality\n            if (this.jumpTo) {\n                this.jumpTo.addEventListener('focus', () => {\n                    if (this.closeButton) {\n                        this.closeButton.focus();\n                    }\n                });\n            }\n        }\n\n        isDrawerOpen() {\n            return this.drawerElement && this.drawerElement.classList.contains('show');\n        }\n\n        openDrawer() {\n            if (!this.drawerElement) {\n                return;\n            }\n\n            // Close message drawer if open\n            PubSub.publish('core_message/hide', {});\n\n            this.drawerElement.classList.add('show');\n            this.drawerElement.setAttribute('tabindex', '0');\n\n            // Add padding to page (redistribute space)\n            if (this.pageElement && !this.pageElement.classList.contains('show-drawer-right')) {\n                this.pageElement.classList.add('show-drawer-right');\n            }\n\n            // Focus management\n            if (this.jumpTo) {\n                this.jumpTo.setAttribute('tabindex', 0);\n                this.jumpTo.focus();\n            }\n        }\n\n        closeDrawer() {\n            if (!this.drawerElement) {\n                return;\n            }\n\n            this.drawerElement.classList.remove('show');\n            this.drawerElement.setAttribute('tabindex', '-1');\n\n            // Remove padding from page\n            if (this.pageElement && this.pageElement.classList.contains('show-drawer-right')) {\n                this.pageElement.classList.remove('show-drawer-right');\n            }\n\n            // Focus management\n            if (this.jumpTo) {\n                this.jumpTo.setAttribute('tabindex', -1);\n            }\n            if (this.toggleButton) {\n                this.toggleButton.focus();\n            }\n        }\n\n        toggleDrawer() {\n            if (this.isDrawerOpen()) {\n                this.closeDrawer();\n            } else {\n                this.openDrawer();\n            }\n        }\n\n        sendMessage() {\n            const input = this.root.find(SELECTORS.INPUT);\n            const sendBtn = this.root.find(SELECTORS.SEND_BTN);\n\n            const messageText = input.val().trim();\n            if (!messageText || this.streaming) {\n                return;\n            }\n\n            if (messageText.length > 4000) {\n                this.addMessage('[Error] El mensaje es demasiado largo. Máximo 4000 caracteres.', 'ai');\n                return;\n            }\n\n            try {\n                this.closeCurrentStream();\n                sendBtn.prop('disabled', true);\n\n                this.addMessage(messageText, 'user');\n                input.val('');\n                input.css('height', 'auto');\n                this.scrollToBottom();\n                this.showTypingIndicator();\n\n                const requests = Ajax.call([{\n                    methodname: \"local_datacurso_create_chat_message\",\n                    args: {\n                        courseid: parseInt(this.courseId, 10),\n                        message: this.sanitizeString(messageText.substring(0, 4000)),\n                        meta: JSON.stringify({\n                            user_role: 'Estudiante',\n                            timestamp: Math.floor(Date.now() / 1000)\n                        })\n                    },\n                }]);\n\n                requests[0]\n                    .then((data) => {\n                        if (!data || !data.stream_url) {\n                            throw new Error('URL de stream ausente en la respuesta');\n                        }\n                        this.currentSessionId = data.session_id;\n                        this.startSSE(data.stream_url, sendBtn);\n                        return data;\n                    })\n                    .catch((err) => {\n                        this.hideTypingIndicator();\n                        this.addMessage('[Error] ' + (err.message || 'Error desconocido'), 'ai');\n                        sendBtn.prop('disabled', false);\n                        Notification.exception(err);\n                    });\n            } catch (error) {\n                this.hideTypingIndicator();\n                this.addMessage('[Error] Error interno: ' + error.message, 'ai');\n                sendBtn.prop('disabled', false);\n            }\n        }\n\n        startSSE(streamUrl, sendBtn) {\n            try {\n                const es = new EventSource(streamUrl);\n                this.currentEventSource = es;\n                this.streaming = true;\n                let firstToken = true;\n\n                es.addEventListener('token', (ev) => {\n                    try {\n                        const payload = JSON.parse(ev.data);\n                        const text = payload.t || payload.content || '';\n\n                        if (firstToken) {\n                            firstToken = false;\n                            this.ensureAIMessageEl();\n                            this.hideTypingIndicator();\n                        }\n                        this.appendToAIMessage(text);\n                    } catch (e) {\n                        window.console.warn('Invalid token data:', ev.data);\n                    }\n                });\n\n                es.addEventListener('message_completed', () => {\n                    this.finalizeStream(sendBtn);\n                });\n\n                es.addEventListener('error', () => {\n                    this.appendToAIMessage('\\n[Conexión interrumpida]');\n                    this.finalizeStream(sendBtn);\n                });\n            } catch (error) {\n                window.console.error('Error starting SSE:', error);\n                this.addMessage('[Error] No se pudo establecer conexión SSE', 'ai');\n                this.finalizeStream(sendBtn);\n            }\n        }\n\n        ensureAIMessageEl() {\n            if (this.currentAIMessageEl) {\n                return this.currentAIMessageEl;\n            }\n\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            let el = messages.find('.tutor-ia-typing');\n\n            if (el.length) {\n                el.removeClass('tutor-ia-typing');\n                el.addClass('tutor-ia-message ai');\n                el.html('');\n            } else {\n                el = $('<div class=\"tutor-ia-message ai\"></div>');\n                messages.append(el);\n            }\n\n            this.currentAIMessageEl = el[0];\n            return this.currentAIMessageEl;\n        }\n\n        appendToAIMessage(text) {\n            if (!this.currentAIMessageEl) {\n                this.ensureAIMessageEl();\n            }\n            if (!this.currentAIMessageEl || typeof text !== 'string') {\n                return;\n            }\n\n            const currentText = this.currentAIMessageEl.textContent || '';\n            const maxLength = 10000;\n\n            if (currentText.length + text.length > maxLength) {\n                const remaining = maxLength - currentText.length;\n                if (remaining > 0) {\n                    this.currentAIMessageEl.textContent += text.substring(0, remaining) + '...';\n                }\n                return;\n            }\n\n            this.currentAIMessageEl.textContent += text;\n            this.scrollToBottom();\n        }\n\n        addMessage(text, type) {\n            if (!text || typeof text !== 'string') {\n                return;\n            }\n\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            const messageEl = $('<div></div>')\n                .addClass('tutor-ia-message')\n                .addClass(type)\n                .text(text.substring(0, 10000));\n\n            messages.append(messageEl);\n            this.scrollToBottom();\n        }\n\n        showTypingIndicator() {\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            if (messages.find('.tutor-ia-typing').length) {\n                return;\n            }\n\n            const typing = $('<div class=\"tutor-ia-message ai tutor-ia-typing\"></div>')\n                .html('<span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span>');\n            messages.append(typing);\n            this.scrollToBottom();\n        }\n\n        hideTypingIndicator() {\n            this.root.find('.tutor-ia-typing').remove();\n        }\n\n        scrollToBottom() {\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            messages.scrollTop(messages[0].scrollHeight);\n        }\n\n        closeCurrentStream() {\n            if (this.currentEventSource) {\n                try {\n                    this.currentEventSource.close();\n                } catch (e) {\n                    window.console.warn('Error closing EventSource:', e);\n                }\n            }\n            this.currentEventSource = null;\n            this.streaming = false;\n            this.currentAIMessageEl = null;\n            this.hideTypingIndicator();\n        }\n\n        finalizeStream(sendBtn) {\n            this.closeCurrentStream();\n            if (sendBtn) {\n                sendBtn.prop('disabled', false);\n            }\n        }\n\n        sanitizeString(str) {\n            if (typeof str !== 'string') {\n                return '';\n            }\n            return str.replace(/[<>]/g, '');\n        }\n\n        cleanup() {\n            this.closeCurrentStream();\n        }\n\n        destroy() {\n            this.cleanup();\n        }\n    }\n\n    return {\n        init: function(root, uniqueId, courseId, userId) {\n            return new TutorIAChat(root, uniqueId, courseId, userId);\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","PubSub","SELECTORS","TutorIAChat","constructor","root","uniqueId","courseId","userId","streaming","currentEventSource","currentSessionId","currentAIMessageEl","drawerElement","document","querySelector","pageElement","toggleButton","closeButton","jumpTo","init","registerEventListeners","window","addEventListener","this","cleanup","e","preventDefault","toggleDrawer","closeDrawer","find","on","sendMessage","input","key","shiftKey","style","height","Math","min","scrollHeight","isDrawerOpen","subscribe","focus","classList","contains","openDrawer","publish","add","setAttribute","remove","sendBtn","messageText","val","trim","length","addMessage","closeCurrentStream","prop","css","scrollToBottom","showTypingIndicator","call","methodname","args","courseid","parseInt","message","sanitizeString","substring","meta","JSON","stringify","user_role","timestamp","floor","Date","now","then","data","stream_url","Error","session_id","startSSE","catch","err","hideTypingIndicator","exception","error","streamUrl","es","EventSource","firstToken","ev","payload","parse","text","t","content","ensureAIMessageEl","appendToAIMessage","console","warn","finalizeStream","messages","el","removeClass","addClass","html","append","currentText","textContent","remaining","type","messageEl","typing","scrollTop","close","str","replace","destroy"],"mappings":"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"}