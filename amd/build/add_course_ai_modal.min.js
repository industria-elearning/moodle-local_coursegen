define("local_datacurso/add_course_ai_modal",["exports","core/modal","core/templates","core/notification","core/str","local_datacurso/course_streaming","local_datacurso/repository/chatbot"],(function(_exports,_modal,_templates,_notification,_str,_course_streaming,_chatbot){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Course AI Modal Module using Moodle's modal factory
   *
   * @module     local_datacurso/add_course_ai_modal
   * @copyright  2025 Buendata <soluciones@buendata.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal=_interopRequireDefault(_modal),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification);let currentModal=null;_exports.init=async function(){let params=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{currentModal&&(currentModal.destroy(),currentModal=null);const[title,bodyHTML]=await Promise.all([(0,_str.get_string)("addcourseai_modaltitle","local_datacurso"),_templates.default.render("local_datacurso/add_course_ai_modal",{})]);currentModal=await _modal.default.create({title:title,body:bodyHTML,large:!0,scrollable:!0,removeOnClose:!0}),currentModal.getRoot().addClass("local_datacurso_course_ai_modal"),currentModal.show();const bodyEl=currentModal.getBody()[0];return initializeChatInterface(bodyEl,params),setupPlanningButtons(bodyEl,params),currentModal}catch(error){return _notification.default.exception(error),null}};const initializeChatInterface=async(container,params)=>{try{const chatInterface=container.querySelector("#course-chat-interface");chatInterface&&(chatInterface.style.display="none"),await(0,_course_streaming.startStreaming)(params.streamingurl,container)}catch(error){console.error("Error starting streaming:",error),_notification.default.exception(error)}},addBubble=(wrap,text,role)=>{const row=document.createElement("div");row.className="local_datacurso_ai_msg ".concat(role);const bubble=document.createElement("div");bubble.className="bubble",bubble.textContent=text,row.appendChild(bubble),wrap.appendChild(row),scrollToBottom(wrap)},scrollToBottom=wrap=>{wrap.scrollTop=wrap.scrollHeight};function typeWriter(element,text,speed){return new Promise((resolve=>{let i=0;!function typing(){i<text.length?(element.textContent+=text.charAt(i),i++,setTimeout(typing,speed)):resolve()}()}))}const setupPlanningButtons=(container,params)=>{const acceptBtn=container.querySelector("#accept-planning-btn"),adjustBtn=container.querySelector("#adjust-planning-btn"),chatInterface=container.querySelector("#course-chat-interface"),chatForm=container.querySelector("#course-chat-form"),chatInput=container.querySelector("#courseChatInput"),streamingContainer=container.querySelector("[data-region='local_datacurso/course_streaming']");acceptBtn&&acceptBtn.addEventListener("click",(async()=>{acceptBtn.disabled=!0,acceptBtn.textContent="Creating Course...";try{const courseId=params.courseid;if(!courseId)throw new Error("No se pudo obtener el ID del curso");const response=await(0,_chatbot.planCourseExecute)(courseId);if(!response.success)throw new Error(response.message||"Error al ejecutar el plan");chatInterface&&(chatInterface.style.display="none");const planningActions=container.querySelector("#course-planning-actions");if(planningActions&&(planningActions.style.display="none"),response.data&&response.data.streamingurl&&streamingContainer){const html=await _templates.default.render("local_datacurso/course_streaming_inline",{title:"Creando el curso",subtitle:"Generando contenido del curso..."}),temp=document.createElement("div");temp.innerHTML=html;const streamingBlock=temp.firstElementChild;streamingContainer.appendChild(streamingBlock),await(0,_course_streaming.startExecutionStreaming)(response.data.streamingurl,streamingBlock,courseId)}(0,_str.get_string)("addcourseai_done","local_datacurso").then((msg=>{_notification.default.addNotification({message:msg,type:"success"})})).catch((()=>{_notification.default.addNotification({message:"Curso creado exitosamente!",type:"success"})}))}catch(error){console.error("Error creating course:",error),acceptBtn.disabled=!1,(0,_str.get_string)("accept_planning_create_course","local_datacurso").then((msg=>{acceptBtn.textContent=msg})),_notification.default.exception(error)}})),adjustBtn&&adjustBtn.addEventListener("click",(()=>{adjustBtn.disabled=!0,chatInterface&&(chatInterface.style.display="block",chatInput.focus())})),chatInput&&chatInput.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),chatForm&&chatForm.dispatchEvent(new Event("submit")))})),chatForm&&chatForm.addEventListener("submit",(async e=>{e.preventDefault();const message=chatInput.value.trim();if(!message)return;if(!streamingContainer)return void console.error("Streaming container not found");addBubble(streamingContainer,message,"user"),chatInput.value="";const submitBtn=chatForm.querySelector('button[type="submit"]');submitBtn.disabled=!0;try{const response=await(0,_chatbot.planCourseMessage)({courseid:params.courseid,text:message});if(!response.success){const errorResponse=document.createElement("div");return errorResponse.className="mb-3 text-danger",streamingContainer.appendChild(errorResponse),void await typeWriter(errorResponse,response.message||"Error processing your request",15)}const streamingUrl=response.data.streamingurl;if(streamingUrl){chatInterface&&(chatInterface.style.display="none");const separator=document.createElement("div");separator.className="mt-4 mb-3 border-top pt-3",separator.innerHTML='<h6 class="text-muted"><i class="fa fa-edit"></i> Correcci√≥n del plan:</h6>',streamingContainer.appendChild(separator);const html=await _templates.default.render("local_datacurso/course_streaming_inline",{}),temp=document.createElement("div");temp.innerHTML=html;const streamingBlock=temp.firstElementChild;streamingContainer.appendChild(streamingBlock),await(0,_course_streaming.startStreaming)(streamingUrl,streamingBlock,!0)}}catch(error){const errorResponse=document.createElement("div");errorResponse.className="mb-3 text-danger",streamingContainer.appendChild(errorResponse),await typeWriter(errorResponse,"Error: "+error.message,15),console.error("Error sending message:",error)}finally{submitBtn.disabled=!1}}))}}));

//# sourceMappingURL=add_course_ai_modal.min.js.map