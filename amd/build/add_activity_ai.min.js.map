{"version":3,"file":"add_activity_ai.min.js","sources":["../src/add_activity_ai.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module add_activity_ai\n *\n * @module     local_datacurso/add_activity_ai\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n  \"core/templates\",\n  \"core/notification\",\n  \"core/modal\",\n  \"core/custom_interaction_events\",\n  \"core/str\",\n  \"local_datacurso/repository/chatbot\",\n  \"local_datacurso/module_streaming\",\n], (Templates, Notification, Modal, CustomEvents, Str, chatbotRepository, moduleStreaming) => {\n  const LINK_SELECTOR = '[data-action=\"local_datacurso/add_activity_ai\"]';\n\n  let modal = null;\n  let initialized = false;\n\n  const init = () => {\n    if (initialized) {\n      return;\n    }\n    initialized = true;\n\n    const events = [\n      \"click\",\n      CustomEvents.events.activate,\n      CustomEvents.events.keyboardActivate,\n    ];\n\n    CustomEvents.define(document, events);\n\n    events.forEach((event) => {\n      document.addEventListener(event, async (e) => {\n        const link = e.target.closest(LINK_SELECTOR);\n        if (!link) {\n          return;\n        }\n        e.preventDefault();\n        const payload = readDataset(link);\n        await openChatModal(payload);\n      });\n    });\n  };\n\n  const readDataset = (el) => {\n    const { sectionnum, beforemod } = el.dataset;\n    return {\n      sectionnum: Number(sectionnum),\n      beforemod: beforemod ? Number(beforemod) : null,\n    };\n  };\n\n  const openChatModal = async (payload) => {\n    try {\n      // Si ya hay un modal abierto, cerrarlo primero\n      if (modal) {\n        await modal.destroy();\n        modal = null;\n      }\n\n      const [bodyHTML, footerHTML] = await Promise.all([\n        Templates.render(\"local_datacurso/add_activity_ai_modal\", {}),\n        Templates.render(\"local_datacurso/activity_chat_footer\", {})\n      ]);\n\n      const title = await Str.get_string(\n        \"addactivityai_modaltitle\",\n        \"local_datacurso\"\n      );\n\n      modal = await Modal.create({\n        title,\n        body: bodyHTML,\n        footer: footerHTML,\n        large: true,\n        scrollable: true,\n        removeOnClose: true,\n      });\n\n      // Align width/appearance with course AI modal.\n      modal.getRoot().addClass('local_datacurso_course_ai_modal');\n\n      // Explicitly show after creation (no show: true in options).\n      modal.show();\n\n      // Manejar el evento de cierre del modal\n      modal.getRoot().on(\"hidden.bs.modal\", () => {\n        if (modal) {\n          modal.destroy();\n          modal = null;\n        }\n      });\n      // Handlers del chat\n      const bodyEl = modal.getBody()[0];\n      const footerEl = modal.getFooter()[0];\n      wireChatHandlers(bodyEl, footerEl, payload);\n    } catch (err) {\n      Notification.exception(err);\n    }\n  };\n\n  const wireChatHandlers = (container, footerContainer, payload) => {\n    const streamingSection = container.querySelector(\"#activity-streaming-section\");\n    const form = footerContainer.querySelector(\"form.local_datacurso_ai_input\");\n    const textarea = form.querySelector(\"textarea\");\n    const sendBtn = form.querySelector(\".local_datacurso_ai_send\");\n\n    // Enviar con submit.\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const prompt = textarea.value.trim();\n      if (!prompt) return;\n\n      const generateImages = document.querySelector('input[name=\"generate_images\"]:checked').value;\n\n      textarea.value = \"\";\n\n      // Disable form elements\n      sendBtn.disabled = true;\n      textarea.disabled = true;\n      const radioButtons = document.querySelectorAll('input[name=\"generate_images\"]');\n      radioButtons.forEach((rb) => {\n        rb.disabled = true;\n      });\n      setLoading(sendBtn, true);\n\n      try {\n        // Start streaming job\n        const response = await chatbotRepository.createModStream({\n          ...payload,\n          prompt,\n          generateimages: generateImages\n        });\n\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n\n        // Show and use the integrated streaming section\n        if (streamingSection) {\n          streamingSection.style.display = \"block\";\n          \n          // Update progress indicator text for activity creation\n          const progressIndicator = streamingSection.querySelector(\"[data-region='local_datacurso/course_streaming/progress']\");\n          if (progressIndicator) {\n            const titleElement = progressIndicator.querySelector(\"h6, h5\");\n            const subtitleElement = progressIndicator.querySelector(\"small\");\n            if (titleElement) {\n              const titleText = await Str.get_string('module_creation_title', 'local_datacurso');\n              titleElement.textContent = titleText;\n            }\n            if (subtitleElement) {\n              const subtitleText = await Str.get_string('module_creation_subtitle', 'local_datacurso');\n              subtitleElement.textContent = subtitleText;\n            }\n            progressIndicator.style.display = \"block\";\n          }\n        }\n\n        // Start module streaming using the integrated container\n        await moduleStreaming.startModuleStreaming(\n          response.streamingurl, \n          streamingSection, \n          {\n            courseid: payload.courseid,\n            sectionnum: payload.sectionnum,\n            beforemod: payload.beforemod,\n            jobid: response.job_id\n          }\n        );\n\n      } catch (err) {\n        console.error(\"Error starting module creation:\", err);\n        \n        // Show error message in streaming section\n        if (streamingSection) {\n          streamingSection.style.display = \"block\";\n          const eventList = streamingSection.querySelector(\"[data-region='local_datacurso/course_streaming']\");\n          if (eventList) {\n            const errorDiv = document.createElement(\"div\");\n            errorDiv.className = \"alert alert-danger mb-2\";\n            const errorMsg = err.message || await Str.get_string(\"addactivityai_error\", \"local_datacurso\");\n            errorDiv.innerHTML = `<small>❌ Error: ${errorMsg}</small>`;\n            eventList.appendChild(errorDiv);\n          }\n        }\n      } finally {\n        // Re-enable form elements\n        radioButtons.forEach((rb) => {\n          rb.disabled = false;\n        });\n        textarea.disabled = false;\n        sendBtn.disabled = false;\n        setLoading(sendBtn, false);\n      }\n    });\n\n    // Enter para enviar (sin Ctrl, ya que es más común en chat)\n    textarea.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        form.requestSubmit();\n      }\n    });\n  };\n\n  const pushUser = (wrap, text) => addBubble(wrap, text, \"user\");\n  const pushAI = (wrap, text) => addBubble(wrap, text, \"ai\");\n\n  const addBubble = (wrap, text, role) => {\n    const row = document.createElement(\"div\");\n    row.className = `local_datacurso_ai_msg ${role}`;\n    const b = document.createElement(\"div\");\n    b.className = \"bubble\";\n    b.textContent = text;\n    row.appendChild(b);\n    wrap.appendChild(row);\n    scrollToBottom(wrap);\n  };\n\n  const scrollToBottom = (wrap) => {\n    wrap.scrollTop = wrap.scrollHeight;\n  };\n\n  const setLoading = (btn, isLoading) => {\n    btn.disabled = isLoading;\n    btn.style.opacity = isLoading ? 0.7 : 1;\n  };\n\n  const renderWSResult = (wrap, res) => {\n    const lines = [];\n    if (res?.success === false) {\n      if (res?.message) {\n        pushAI(wrap, res.message);\n      } else {\n        Str.get_string(\"addactivityai_faildefault\", \"local_datacurso\").then(\n          (s) => pushAI(wrap, s)\n        );\n      }\n      return;\n    }\n\n    if (res?.message) lines.push(res.message);\n\n    if (lines.length) {\n      pushAI(wrap, lines.join(\"\\n\"));\n      setTimeout(() => {\n        const last = wrap.querySelector(\".local_datacurso_ai_msg.ai:last-child .bubble\");\n        if (last) last.textContent = lines.join(\"\\n\");\n      }, 50);\n    } else {\n      Str.get_string(\"addactivityai_done\", \"local_datacurso\").then((s) =>\n        pushAI(wrap, s)\n      );\n    }\n  };\n\n  return { init, openChatModal };\n});\n"],"names":["define","Templates","Notification","Modal","CustomEvents","Str","chatbotRepository","moduleStreaming","modal","initialized","readDataset","el","sectionnum","beforemod","dataset","Number","openChatModal","async","destroy","bodyHTML","footerHTML","Promise","all","render","title","get_string","create","body","footer","large","scrollable","removeOnClose","getRoot","addClass","show","on","bodyEl","getBody","footerEl","getFooter","wireChatHandlers","payload","err","exception","container","footerContainer","streamingSection","querySelector","form","textarea","sendBtn","addEventListener","e","preventDefault","prompt","value","trim","generateImages","document","disabled","radioButtons","querySelectorAll","forEach","rb","setLoading","response","createModStream","generateimages","ok","Error","message","style","display","progressIndicator","titleElement","subtitleElement","titleText","textContent","subtitleText","startModuleStreaming","streamingurl","courseid","jobid","job_id","console","error","eventList","errorDiv","createElement","className","errorMsg","innerHTML","appendChild","key","shiftKey","requestSubmit","btn","isLoading","opacity","init","events","activate","keyboardActivate","event","link","target","closest"],"mappings":"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"}