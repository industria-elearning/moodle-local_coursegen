{"version":3,"file":"add_activity_ai.min.js","sources":["../src/add_activity_ai.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module add_activity_ai\n *\n * @module     local_datacurso/add_activity_ai\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n  \"core/templates\",\n  \"core/notification\",\n  \"core/modal\",\n  \"core/custom_interaction_events\",\n  \"core/str\",\n  \"local_datacurso/repository/chatbot\",\n], (Templates, Notification, Modal, CustomEvents, Str, chatbotRepository) => {\n  const LINK_SELECTOR = '[data-action=\"local_datacurso/add_activity_ai\"]';\n\n  let modal = null;\n  let initialized = false;\n\n  const init = () => {\n    if (initialized) {\n      return;\n    }\n    initialized = true;\n\n    const events = [\n      \"click\",\n      CustomEvents.events.activate,\n      CustomEvents.events.keyboardActivate,\n    ];\n\n    CustomEvents.define(document, events);\n\n    events.forEach((event) => {\n      document.addEventListener(event, async (e) => {\n        const link = e.target.closest(LINK_SELECTOR);\n        if (!link) {\n          return;\n        }\n        e.preventDefault();\n        const payload = readDataset(link);\n        await openChatModal(payload);\n      });\n    });\n  };\n\n  const readDataset = (el) => {\n    const { sectionnum, beforemod } = el.dataset;\n    return {\n      sectionnum: Number(sectionnum),\n      beforemod: beforemod ? Number(beforemod) : null,\n    };\n  };\n\n  const openChatModal = async (payload) => {\n    try {\n      // Si ya hay un modal abierto, cerrarlo primero\n      if (modal) {\n        await modal.destroy();\n        modal = null;\n      }\n\n      const bodyHTML = await Templates.render(\n        \"local_datacurso/add_activity_ai_modal\",\n        {}\n      );\n\n      const title = await Str.get_string(\n        \"addactivityai_modaltitle\",\n        \"local_datacurso\"\n      );\n\n      modal = await Modal.create({\n        title,\n        large: true,\n        show: true,\n        removeOnClose: true,\n      });\n\n      // Manejar el evento de cierre del modal\n      modal.getRoot().on(\"hidden.bs.modal\", () => {\n        if (modal) {\n          modal.destroy();\n          modal = null;\n        }\n      });\n\n      await modal.setBody(bodyHTML);\n      // No llamar a show() nuevamente; el modal ya fue creado con show: true.\n\n      // Handlers del chat\n      const bodyEl = modal.getBody()[0];\n      wireChatHandlers(bodyEl, payload);\n    } catch (err) {\n      Notification.exception(err);\n    }\n  };\n\n  const wireChatHandlers = (container, payload) => {\n    const messagesEl = container.querySelector(\".bdai-messages\");\n    const form = container.querySelector(\"form.bdai-input\");\n    const textarea = form.querySelector(\"textarea\");\n    const sendBtn = form.querySelector(\".bdai-send\");\n\n    // Mensaje de bienvenida.\n    Str.get_string(\"addactivityai_welcome\", \"local_datacurso\").then((s) => {\n      pushAI(messagesEl, s);\n    });\n\n    // Enviar con submit.\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const prompt = textarea.value.trim();\n      if (!prompt) return;\n\n      const generateImages = document.querySelector('input[name=\"generate_images\"]:checked').value;\n\n      pushUser(messagesEl, prompt);\n      textarea.value = \"\";\n      textarea.focus();\n\n      // Disable send button.\n      sendBtn.disabled = true;\n      // Disable textarea.\n      textarea.disabled = true;\n      // Disable radio buttons.\n      const radioButtons = document.querySelectorAll('input[name=\"generate_images\"]');\n      radioButtons.forEach((rb) => {\n        rb.disabled = true;\n      });\n      setLoading(sendBtn, true);\n      const typing = pushTyping(messagesEl);\n      try {\n        const response = await chatbotRepository.createMod({\n          ...payload,\n          prompt,\n          generateimages: generateImages\n        });\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n\n        removeTyping(typing);\n        renderWSResult(messagesEl, response);\n\n        setTimeout(() => {\n          window.location.href = response.courseurl;\n        }, 800); // Pequeño delay para que se vea el mensaje de éxito\n      } catch (err) {\n        removeTyping(typing);\n\n        // This is when cloudflare timeout.\n        if (!err) {\n          const msg = await Str.get_string(\"resourcecreatedsuccess\", \"local_datacurso\");\n          pushAI(messagesEl, msg);\n          setTimeout(() => {\n            window.location.href = `/course/view.php?id=${payload.courseid}`;\n          }, 800);\n        } else {\n          // Other errors.\n          Str.get_string(\"addactivityai_error\", \"local_datacurso\").then((s) => {\n            pushAI(messagesEl, `❌ ${s}`);\n          });\n        }\n      } finally {\n        radioButtons.forEach((rb) => {\n          rb.disabled = false;\n        });\n        textarea.disabled = false;\n        sendBtn.disabled = false;\n        setLoading(sendBtn, false);\n        scrollToBottom(messagesEl);\n      }\n    });\n\n    // Enter para enviar (sin Ctrl, ya que es más común en chat)\n    textarea.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        form.requestSubmit();\n      }\n    });\n  };\n\n  const pushUser = (wrap, text) => addBubble(wrap, text, \"user\");\n  const pushAI = (wrap, text) => addBubble(wrap, text, \"ai\");\n\n  const addBubble = (wrap, text, role) => {\n    const row = document.createElement(\"div\");\n    row.className = `bdai-msg ${role}`;\n    const b = document.createElement(\"div\");\n    b.className = \"bubble\";\n    b.textContent = text;\n    row.appendChild(b);\n    wrap.appendChild(row);\n    scrollToBottom(wrap);\n  };\n\n  const pushTyping = (wrap) => {\n    const row = document.createElement(\"div\");\n    row.className = \"bdai-msg ai bdai-typing\";\n    const b = document.createElement(\"div\");\n    b.className = \"bubble\";\n    b.innerHTML =\n      '<span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span>';\n    row.appendChild(b);\n    wrap.appendChild(row);\n    scrollToBottom(wrap);\n    return row;\n  };\n\n  const removeTyping = (el) => el?.remove();\n\n  const scrollToBottom = (wrap) => {\n    wrap.scrollTop = wrap.scrollHeight;\n  };\n\n  const setLoading = (btn, isLoading) => {\n    btn.disabled = isLoading;\n    btn.style.opacity = isLoading ? 0.7 : 1;\n  };\n\n  const renderWSResult = (wrap, res) => {\n    const lines = [];\n    if (res?.success === false) {\n      if (res?.message) {\n        pushAI(wrap, res.message);\n      } else {\n        Str.get_string(\"addactivityai_faildefault\", \"local_datacurso\").then(\n          (s) => pushAI(wrap, s)\n        );\n      }\n      return;\n    }\n\n    if (res?.message) lines.push(res.message);\n\n    if (lines.length) {\n      pushAI(wrap, lines.join(\"\\n\"));\n      setTimeout(() => {\n        const last = wrap.querySelector(\".bdai-msg.ai:last-child .bubble\");\n        if (last) last.textContent = lines.join(\"\\n\");\n      }, 50);\n    } else {\n      Str.get_string(\"addactivityai_done\", \"local_datacurso\").then((s) =>\n        pushAI(wrap, s)\n      );\n    }\n  };\n\n  return { init, openChatModal };\n});\n"],"names":["define","Templates","Notification","Modal","CustomEvents","Str","chatbotRepository","modal","initialized","readDataset","el","sectionnum","beforemod","dataset","Number","openChatModal","async","destroy","bodyHTML","render","title","get_string","create","large","show","removeOnClose","getRoot","on","setBody","bodyEl","getBody","wireChatHandlers","payload","err","exception","container","messagesEl","querySelector","form","textarea","sendBtn","then","s","pushAI","addEventListener","e","preventDefault","prompt","value","trim","generateImages","document","pushUser","focus","disabled","radioButtons","querySelectorAll","forEach","rb","setLoading","typing","pushTyping","response","createMod","generateimages","ok","Error","message","removeTyping","renderWSResult","setTimeout","window","location","href","courseurl","msg","courseid","scrollToBottom","key","shiftKey","requestSubmit","wrap","text","addBubble","role","row","createElement","className","b","textContent","appendChild","innerHTML","remove","scrollTop","scrollHeight","btn","isLoading","style","opacity","res","lines","success","push","length","join","last","init","events","activate","keyboardActivate","event","link","target","closest"],"mappings":"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"}