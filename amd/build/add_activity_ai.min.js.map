{"version":3,"file":"add_activity_ai.min.js","sources":["../src/add_activity_ai.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module add_activity_ai\n *\n * @module     local_datacurso/add_activity_ai\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n  \"core/templates\",\n  \"core/notification\",\n  \"core/modal\",\n  \"core/custom_interaction_events\",\n  \"core/str\",\n  \"local_datacurso/repository/chatbot\",\n  \"local_datacurso/module_streaming\",\n], (Templates, Notification, Modal, CustomEvents, Str, chatbotRepository, moduleStreaming) => {\n  const LINK_SELECTOR = '[data-action=\"local_datacurso/add_activity_ai\"]';\n\n  let modal = null;\n  let initialized = false;\n\n  const init = () => {\n    if (initialized) {\n      return;\n    }\n    initialized = true;\n\n    const events = [\n      \"click\",\n      CustomEvents.events.activate,\n      CustomEvents.events.keyboardActivate,\n    ];\n\n    CustomEvents.define(document, events);\n\n    events.forEach((event) => {\n      document.addEventListener(event, async (e) => {\n        const link = e.target.closest(LINK_SELECTOR);\n        if (!link) {\n          return;\n        }\n        e.preventDefault();\n        const payload = readDataset(link);\n        await openChatModal(payload);\n      });\n    });\n  };\n\n  const readDataset = (el) => {\n    const { sectionnum, beforemod } = el.dataset;\n    return {\n      sectionnum: Number(sectionnum),\n      beforemod: beforemod ? Number(beforemod) : null,\n    };\n  };\n\n  const openChatModal = async (payload) => {\n    try {\n      // Si ya hay un modal abierto, cerrarlo primero\n      if (modal) {\n        await modal.destroy();\n        modal = null;\n      }\n\n      const bodyHTML = await Templates.render(\n        \"local_datacurso/add_activity_ai_modal\",\n        {}\n      );\n\n      const title = await Str.get_string(\n        \"addactivityai_modaltitle\",\n        \"local_datacurso\"\n      );\n\n      modal = await Modal.create({\n        title,\n        body: bodyHTML,\n        large: true,\n        scrollable: true,\n        removeOnClose: true,\n      });\n\n      // Align width/appearance with course AI modal.\n      modal.getRoot().addClass('local_datacurso_course_ai_modal');\n\n      // Explicitly show after creation (no show: true in options).\n      modal.show();\n\n      // Manejar el evento de cierre del modal\n      modal.getRoot().on(\"hidden.bs.modal\", () => {\n        if (modal) {\n          modal.destroy();\n          modal = null;\n        }\n      });\n      // Handlers del chat\n      const bodyEl = modal.getBody()[0];\n      wireChatHandlers(bodyEl, payload);\n    } catch (err) {\n      Notification.exception(err);\n    }\n  };\n\n  const wireChatHandlers = (container, payload) => {\n    const messagesEl = container.querySelector(\".local_datacurso_ai_messages\");\n    const form = container.querySelector(\"form.local_datacurso_ai_input\");\n    const textarea = form.querySelector(\"textarea\");\n    const sendBtn = form.querySelector(\".local_datacurso_ai_send\");\n\n    // Mensaje de bienvenida.\n    Str.get_string(\"addactivityai_welcome\", \"local_datacurso\").then((s) => {\n      pushAI(messagesEl, s);\n    });\n\n    // Enviar con submit.\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const prompt = textarea.value.trim();\n      if (!prompt) return;\n\n      const generateImages = document.querySelector('input[name=\"generate_images\"]:checked').value;\n\n      pushUser(messagesEl, prompt);\n      textarea.value = \"\";\n\n      // Disable form elements\n      sendBtn.disabled = true;\n      textarea.disabled = true;\n      const radioButtons = document.querySelectorAll('input[name=\"generate_images\"]');\n      radioButtons.forEach((rb) => {\n        rb.disabled = true;\n      });\n      setLoading(sendBtn, true);\n\n      try {\n        // Start streaming job\n        const response = await chatbotRepository.createModStream({\n          ...payload,\n          prompt,\n          generateimages: generateImages\n        });\n\n        if (!response.ok) {\n          throw new Error(response.message);\n        }\n\n        // Clear messages and show streaming interface\n        messagesEl.innerHTML = \"\";\n        \n        // Create streaming container\n        const streamingContainer = document.createElement(\"div\");\n        streamingContainer.innerHTML = `\n          <div data-region=\"local_datacurso/module_streaming/progress\" style=\"display: block;\">\n            <div class=\"d-flex align-items-center mb-3\">\n              <div data-region=\"local_datacurso/module_streaming/progress/icon\" class=\"me-2\">\n                <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n              <div>\n                <h6 class=\"mb-0\">Creando módulo...</h6>\n                <small class=\"text-muted\">Por favor espera mientras se genera el contenido</small>\n              </div>\n            </div>\n          </div>\n          <div data-region=\"local_datacurso/module_streaming\" class=\"border rounded p-3\" style=\"max-height: 300px; overflow-y: auto;\"></div>\n        `;\n        messagesEl.appendChild(streamingContainer);\n\n        // Start module streaming\n        await moduleStreaming.startModuleStreaming(\n          response.streamingurl, \n          streamingContainer, \n          {\n            courseid: payload.courseid,\n            sectionnum: payload.sectionnum,\n            beforemod: payload.beforemod,\n            jobid: response.job_id\n          }\n        );\n\n      } catch (err) {\n        console.error(\"Error starting module creation:\", err);\n        \n        // Show error message\n        if (err && err.message) {\n          pushAI(messagesEl, `❌ Error: ${err.message}`);\n        } else {\n          const errorMsg = await Str.get_string(\"addactivityai_error\", \"local_datacurso\");\n          pushAI(messagesEl, `❌ ${errorMsg}`);\n        }\n      } finally {\n        // Re-enable form elements\n        radioButtons.forEach((rb) => {\n          rb.disabled = false;\n        });\n        textarea.disabled = false;\n        sendBtn.disabled = false;\n        setLoading(sendBtn, false);\n        scrollToBottom(messagesEl);\n      }\n    });\n\n    // Enter para enviar (sin Ctrl, ya que es más común en chat)\n    textarea.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.shiftKey) {\n        e.preventDefault();\n        form.requestSubmit();\n      }\n    });\n  };\n\n  const pushUser = (wrap, text) => addBubble(wrap, text, \"user\");\n  const pushAI = (wrap, text) => addBubble(wrap, text, \"ai\");\n\n  const addBubble = (wrap, text, role) => {\n    const row = document.createElement(\"div\");\n    row.className = `local_datacurso_ai_msg ${role}`;\n    const b = document.createElement(\"div\");\n    b.className = \"bubble\";\n    b.textContent = text;\n    row.appendChild(b);\n    wrap.appendChild(row);\n    scrollToBottom(wrap);\n  };\n\n  const pushTyping = (wrap) => {\n    const row = document.createElement(\"div\");\n    row.className = \"local_datacurso_ai_msg ai local_datacurso_ai_typing\";\n    const b = document.createElement(\"div\");\n    b.className = \"bubble\";\n    b.innerHTML =\n      '<span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span>';\n    row.appendChild(b);\n    wrap.appendChild(row);\n    scrollToBottom(wrap);\n    return row;\n  };\n\n  const removeTyping = (el) => el?.remove();\n\n  const scrollToBottom = (wrap) => {\n    wrap.scrollTop = wrap.scrollHeight;\n  };\n\n  const setLoading = (btn, isLoading) => {\n    btn.disabled = isLoading;\n    btn.style.opacity = isLoading ? 0.7 : 1;\n  };\n\n  const renderWSResult = (wrap, res) => {\n    const lines = [];\n    if (res?.success === false) {\n      if (res?.message) {\n        pushAI(wrap, res.message);\n      } else {\n        Str.get_string(\"addactivityai_faildefault\", \"local_datacurso\").then(\n          (s) => pushAI(wrap, s)\n        );\n      }\n      return;\n    }\n\n    if (res?.message) lines.push(res.message);\n\n    if (lines.length) {\n      pushAI(wrap, lines.join(\"\\n\"));\n      setTimeout(() => {\n        const last = wrap.querySelector(\".local_datacurso_ai_msg.ai:last-child .bubble\");\n        if (last) last.textContent = lines.join(\"\\n\");\n      }, 50);\n    } else {\n      Str.get_string(\"addactivityai_done\", \"local_datacurso\").then((s) =>\n        pushAI(wrap, s)\n      );\n    }\n  };\n\n  return { init, openChatModal };\n});\n"],"names":["define","Templates","Notification","Modal","CustomEvents","Str","chatbotRepository","moduleStreaming","modal","initialized","readDataset","el","sectionnum","beforemod","dataset","Number","openChatModal","async","destroy","bodyHTML","render","title","get_string","create","body","large","scrollable","removeOnClose","getRoot","addClass","show","on","bodyEl","getBody","wireChatHandlers","payload","err","exception","container","messagesEl","querySelector","form","textarea","sendBtn","then","s","pushAI","addEventListener","e","preventDefault","prompt","value","trim","generateImages","document","pushUser","disabled","radioButtons","querySelectorAll","forEach","rb","setLoading","response","createModStream","generateimages","ok","Error","message","innerHTML","streamingContainer","createElement","appendChild","startModuleStreaming","streamingurl","courseid","jobid","job_id","console","error","errorMsg","scrollToBottom","key","shiftKey","requestSubmit","wrap","text","addBubble","role","row","className","b","textContent","scrollTop","scrollHeight","btn","isLoading","style","opacity","init","events","activate","keyboardActivate","event","link","target","closest"],"mappings":"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"}