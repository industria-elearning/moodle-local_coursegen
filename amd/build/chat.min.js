/**
 * Floating chat for AI assistant in course contexts (con SSE)
 *
 * @module     local_datacurso/chat
 * @copyright  2025 Datacurso
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_datacurso/chat",["core/ajax","core/notification"],(function(Ajax,notification){class DatacursoChat{constructor(){this.chatWidget=null,this.isMinimized=!0,this.userRole="Estudiante",this.courseId=null,this.isInCourseContext=!1,this.currentEventSource=null,this.currentAIMessageEl=null,this.streaming=!1,this.init()}init(){this.checkCourseContext()&&(this.detectUserRole(),this.createChatWidget(),this.addEventListeners())}checkCourseContext(){if(window.datacurso_chat_config&&window.datacurso_chat_config.courseid>0)return this.courseId=window.datacurso_chat_config.courseid,this.isInCourseContext=!0,!0;const url=window.location.href,courseMatch=url.match(/course\/view\.php\?id=(\d+)/),modMatch=url.match(/mod\/\w+\/view\.php.*course=(\d+)/),activityMatch=url.match(/course\/modedit\.php.*course=(\d+)/);if(courseMatch)return this.courseId=courseMatch[1],this.isInCourseContext=!0,!0;if(modMatch)return this.courseId=modMatch[1],this.isInCourseContext=!0,!0;if(activityMatch)return this.courseId=activityMatch[1],this.isInCourseContext=!0,!0;if(document.querySelector("#page-course-view")||document.querySelector(".course-content")||document.querySelector('[data-region="course-content"]')||document.querySelector("body.path-course")||document.querySelector("body.path-mod")){const courseIdElement=document.querySelector("[data-courseid]");return courseIdElement&&(this.courseId=courseIdElement.getAttribute("data-courseid")),this.isInCourseContext=!0,!0}return!1}detectUserRole(){if(window.datacurso_chat_config&&window.datacurso_chat_config.userrole)return void(this.userRole=window.datacurso_chat_config.userrole);const teacherElements=[".editing",'[data-role="teacher"]',".teacher-view",".course-editing","body.editing"];for(const selector of teacherElements)if(document.querySelector(selector))return void(this.userRole="Profesor");const userMenu=document.querySelector(".usermenu")||document.querySelector(".user-menu");userMenu&&userMenu.textContent.toLowerCase().includes("profesor")||document.querySelector('a[href*="edit=on"]')||document.querySelector(".turn-editing-on")||document.querySelector(".editing-on")?this.userRole="Profesor":this.userRole="Estudiante"}createChatWidget(){const chatHTML='\n                <div class="datacurso-chat-widget" id="datacursoChat">\n                    <div class="datacurso-chat-header" id="chatHeader">\n                        <div class="datacurso-chat-header-content">\n                            <h3>Asistente IA</h3>\n                            <span class="datacurso-chat-role" id="userRole">'.concat(this.userRole,'</span>\n                        </div>\n                        <button class="datacurso-chat-toggle" id="toggleBtn" aria-label="Minimizar/Maximizar chat">-</button>\n                    </div>\n\n                    <div class="datacurso-chat-body" id="chatBody">\n                        <div class="datacurso-chat-messages" id="chatMessages">\n                            <div class="datacurso-chat-message ai">\n                                ¡Hola! Soy tu asistente de IA. ¿En qué puedo ayudarte hoy?\n                            </div>\n                        </div>\n\n                        <div class="datacurso-chat-input-container">\n                            <div class="datacurso-chat-input-wrapper">\n                                <textarea\n                                    class="datacurso-chat-input"\n                                    id="chatInput"\n                                    placeholder="Escribe tu mensaje..."\n                                    rows="1"\n                                    aria-label="Mensaje para el asistente IA"></textarea>\n                                <button id="sendBtn" class="datacurso-chat-send" aria-label="Enviar mensaje">\n                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                                        <line x1="22" y1="2" x2="11" y2="13"></line>\n                                        <polygon points="22,2 15,22 11,13 2,9"></polygon>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="datacurso-chat-footer">\n                        Powered by Datacurso IA\n                    </div>\n                </div>\n            '),chatContainer=document.createElement("div");chatContainer.innerHTML=chatHTML,this.chatWidget=chatContainer.firstElementChild;const body=this.chatWidget.querySelector("#chatBody"),toggleBtn=this.chatWidget.querySelector("#toggleBtn");this.isMinimized?(this.chatWidget.classList.add("minimized"),body.style.display="none",toggleBtn.textContent="+",toggleBtn.setAttribute("aria-label","Maximizar chat")):(body.style.display="flex",toggleBtn.textContent="-",toggleBtn.setAttribute("aria-label","Minimizar chat")),document.body.appendChild(this.chatWidget),setTimeout((()=>{this.chatWidget.classList.add("show")}),100)}addEventListeners(){const header=this.chatWidget.querySelector("#chatHeader"),sendBtn=this.chatWidget.querySelector("#sendBtn"),input=this.chatWidget.querySelector("#chatInput");header.addEventListener("click",(()=>this.toggleChat())),sendBtn.addEventListener("click",(()=>this.sendMessage())),input.addEventListener("keypress",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.sendMessage())})),input.addEventListener("input",(()=>{input.style.height="auto",input.style.height=Math.min(input.scrollHeight,100)+"px"})),this.chatWidget.addEventListener("click",(e=>{e.stopPropagation()}))}toggleChat(){const body=this.chatWidget.querySelector("#chatBody"),toggleBtn=this.chatWidget.querySelector("#toggleBtn");this.isMinimized?(this.chatWidget.classList.remove("minimized"),body.style.display="flex",toggleBtn.textContent="-",toggleBtn.setAttribute("aria-label","Minimizar chat"),this.isMinimized=!1):(this.chatWidget.classList.add("minimized"),body.style.display="none",toggleBtn.textContent="+",toggleBtn.setAttribute("aria-label","Maximizar chat"),this.isMinimized=!0)}sendMessage(){const input=this.chatWidget.querySelector("#chatInput"),sendBtn=this.chatWidget.querySelector("#sendBtn"),messageText=input.value.trim();if(!messageText||this.streaming)return;this._closeCurrentStream(),sendBtn.disabled=!0,this.addMessage(messageText,"user"),input.value="",input.style.height="auto",this.scrollToBottom(),this.showTypingIndicator();const courseId=window.courseid||this.courseId||1;Ajax.call([{methodname:"local_datacurso_create_chat_message",args:{courseid:Number(courseId),lang:"es",message:messageText}}])[0].then((data=>{const streamUrl=data.stream_url||data.streamurl,sessionId=data.session_id||data.sessionId;if(!streamUrl)throw new Error("stream_url ausente");this._startSSE(streamUrl,sessionId,sendBtn)})).catch((err=>{this.hideTypingIndicator(),this.addMessage("[Error] No se pudo iniciar el stream.","ai"),sendBtn.disabled=!1,notification.exception(err)}))}_startSSE(streamUrl,sessionId,sendBtn){const messages=this.chatWidget.querySelector("#chatMessages"),aiEl=document.createElement("div");aiEl.className="datacurso-chat-message ai",aiEl.textContent="",messages.appendChild(aiEl),this.currentAIMessageEl=aiEl;const es=new EventSource(streamUrl);this.currentEventSource=es,this.streaming=!0;let firstToken=!0;es.addEventListener("meta",(()=>{})),es.addEventListener("token",(ev=>{try{const t=JSON.parse(ev.data).t||"";firstToken&&(firstToken=!1,this.hideTypingIndicator()),this._appendToAIMessage(t)}catch(e){}})),es.addEventListener("message_completed",(()=>{this._finalizeStream(sendBtn)})),es.onerror=()=>{this._appendToAIMessage("\n[Stream interrumpido]"),this._finalizeStream(sendBtn)},this.scrollToBottom()}_appendToAIMessage(text){this.currentAIMessageEl&&(this.currentAIMessageEl.textContent+=text,this.scrollToBottom())}_closeCurrentStream(){if(this.currentEventSource)try{this.currentEventSource.close()}catch(e){}this.currentEventSource=null,this.streaming=!1,this.currentAIMessageEl=null,this.hideTypingIndicator()}_finalizeStream(sendBtn){this._closeCurrentStream(),sendBtn&&(sendBtn.disabled=!1)}addMessage(text,type){const messages=this.chatWidget.querySelector("#chatMessages"),messageElement=document.createElement("div");messageElement.className="datacurso-chat-message ".concat(type),messageElement.textContent=text,messages.appendChild(messageElement),this.scrollToBottom()}showTypingIndicator(){const messages=this.chatWidget.querySelector("#chatMessages"),typingElement=document.createElement("div");typingElement.className="datacurso-chat-message ai typing-indicator",typingElement.id="typingIndicator",typingElement.innerHTML="<span></span><span></span><span></span>",messages.appendChild(typingElement),this.scrollToBottom()}hideTypingIndicator(){const typingIndicator=this.chatWidget.querySelector("#typingIndicator");typingIndicator&&typingIndicator.remove()}scrollToBottom(){const messages=this.chatWidget.querySelector("#chatMessages");messages.scrollTop=messages.scrollHeight}destroy(){this._closeCurrentStream(),this.chatWidget&&(this.chatWidget.remove(),this.chatWidget=null)}}let datacursoChatInstance=null;return{init:function(){datacursoChatInstance&&datacursoChatInstance.destroy();try{datacursoChatInstance=new DatacursoChat}catch(error){notification.exception(error)}},destroy:function(){datacursoChatInstance&&(datacursoChatInstance.destroy(),datacursoChatInstance=null)}}}));

//# sourceMappingURL=chat.min.js.map