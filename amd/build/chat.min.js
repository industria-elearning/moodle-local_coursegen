/**
 * Floating chat for AI assistant in course contexts (con SSE)
 *
 * @module     local_datacurso/chat
 * @copyright  2025 Datacurso
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_datacurso/chat",["core/ajax","core/notification"],(function(Ajax,notification){class DatacursoChat{constructor(){this.chatWidget=null,this.isMinimized=!0,this.userRole="Estudiante",this.courseId=null,this.isInCourseContext=!1,this.currentEventSource=null,this.currentAIMessageEl=null,this.streaming=!1,this.init()}init(){try{if(!this.checkCourseContext())return;this.detectUserRole(),this.createChatWidget(),this.addEventListeners()}catch(error){window.console&&console.error("Error initializing chat:",error)}}checkCourseContext(){try{if(window.datacurso_chat_config&&window.datacurso_chat_config.courseid>0)return this.courseId=parseInt(window.datacurso_chat_config.courseid,10),this.isInCourseContext=!0,!0;const url=window.location.href,courseMatch=url.match(/course\/view\.php\?id=(\d+)/),modMatch=url.match(/mod\/\w+\/view\.php.*course=(\d+)/),activityMatch=url.match(/course\/modedit\.php.*course=(\d+)/);if(courseMatch)return this.courseId=parseInt(courseMatch[1],10),this.isInCourseContext=!0,!0;if(modMatch)return this.courseId=parseInt(modMatch[1],10),this.isInCourseContext=!0,!0;if(activityMatch)return this.courseId=parseInt(activityMatch[1],10),this.isInCourseContext=!0,!0;if(document.querySelector("#page-course-view")||document.querySelector(".course-content")||document.querySelector('[data-region="course-content"]')||document.querySelector("body.path-course")||document.querySelector("body.path-mod")){const courseIdElement=document.querySelector("[data-courseid]");if(courseIdElement){const courseIdValue=courseIdElement.getAttribute("data-courseid");courseIdValue&&!isNaN(courseIdValue)&&(this.courseId=parseInt(courseIdValue,10))}return this.isInCourseContext=!0,!0}return!1}catch(error){return window.console&&console.warn("Error checking course context:",error),!1}}detectUserRole(){try{if(window.datacurso_chat_config&&window.datacurso_chat_config.userrole){const role=window.datacurso_chat_config.userrole;if("string"==typeof role&&role.trim())return void(this.userRole=role.trim())}const teacherElements=[".editing",'[data-role="teacher"]',".teacher-view",".course-editing","body.editing"];for(const selector of teacherElements)try{if(document.querySelector(selector))return void(this.userRole="Profesor")}catch(_){}const userMenu=document.querySelector(".usermenu")||document.querySelector(".user-menu");if(userMenu&&userMenu.textContent&&userMenu.textContent.toLowerCase().includes("profesor"))return void(this.userRole="Profesor");if(document.querySelector('a[href*="edit=on"]')||document.querySelector(".turn-editing-on")||document.querySelector(".editing-on"))return void(this.userRole="Profesor");this.userRole="Estudiante"}catch(error){window.console&&console.warn("Error detecting user role:",error),this.userRole="Estudiante"}}createChatWidget(){const chatHTML='\n                <div class="datacurso-chat-widget" id="datacursoChat">\n                    <div class="datacurso-chat-header" id="chatHeader">\n                        <div class="datacurso-chat-header-content">\n                            <h3>Asistente IA</h3>\n                            <span class="datacurso-chat-role" id="userRole">'.concat(this.userRole,'</span>\n                        </div>\n                        <button class="datacurso-chat-toggle" id="toggleBtn" aria-label="Minimizar/Maximizar chat">-</button>\n                    </div>\n\n                    <div class="datacurso-chat-body" id="chatBody">\n                        <div class="datacurso-chat-messages" id="chatMessages">\n                            <div class="datacurso-chat-message ai">\n                                ¡Hola! Soy tu asistente de IA. ¿En qué puedo ayudarte hoy?\n                            </div>\n                        </div>\n\n                        <div class="datacurso-chat-input-container">\n                            <div class="datacurso-chat-input-wrapper">\n                                <textarea\n                                    class="datacurso-chat-input"\n                                    id="chatInput"\n                                    placeholder="Escribe tu mensaje..."\n                                    rows="1"\n                                    aria-label="Mensaje para el asistente IA"></textarea>\n                                <button id="sendBtn" class="datacurso-chat-send" aria-label="Enviar mensaje">\n                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                                        <line x1="22" y1="2" x2="11" y2="13"></line>\n                                        <polygon points="22,2 15,22 11,13 2,9"></polygon>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="datacurso-chat-footer">\n                        Powered by Datacurso IA\n                    </div>\n                </div>\n            '),chatContainer=document.createElement("div");chatContainer.innerHTML=chatHTML,this.chatWidget=chatContainer.firstElementChild;const body=this.chatWidget.querySelector("#chatBody"),toggleBtn=this.chatWidget.querySelector("#toggleBtn");this.isMinimized?(this.chatWidget.classList.add("minimized"),body.style.display="none",toggleBtn.textContent="+",toggleBtn.setAttribute("aria-label","Maximizar chat")):(body.style.display="flex",toggleBtn.textContent="-",toggleBtn.setAttribute("aria-label","Minimizar chat")),document.body.appendChild(this.chatWidget),requestAnimationFrame((()=>{setTimeout((()=>{this.chatWidget&&this.chatWidget.classList.add("show")}),100)}))}addEventListeners(){const header=this.chatWidget.querySelector("#chatHeader"),sendBtn=this.chatWidget.querySelector("#sendBtn"),input=this.chatWidget.querySelector("#chatInput");header.addEventListener("click",(()=>this.toggleChat())),sendBtn.addEventListener("click",(()=>this.sendMessage())),input.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.sendMessage())})),input.addEventListener("input",(()=>{input.style.height="auto",input.style.height=Math.min(input.scrollHeight,100)+"px"})),this.chatWidget.addEventListener("click",(e=>e.stopPropagation()))}toggleChat(){const body=this.chatWidget.querySelector("#chatBody"),toggleBtn=this.chatWidget.querySelector("#toggleBtn");this.isMinimized?(this.chatWidget.classList.remove("minimized"),body.style.display="flex",toggleBtn.textContent="-",toggleBtn.setAttribute("aria-label","Minimizar chat"),this.isMinimized=!1):(this.chatWidget.classList.add("minimized"),body.style.display="none",toggleBtn.textContent="+",toggleBtn.setAttribute("aria-label","Maximizar chat"),this.isMinimized=!0)}sendMessage(){const input=this.chatWidget.querySelector("#chatInput"),sendBtn=this.chatWidget.querySelector("#sendBtn");if(!input||!sendBtn)return;const messageText=input.value.trim();if(messageText&&!this.streaming)if(messageText.length>4e3)this.addMessage("[Error] El mensaje es demasiado largo. Máximo 4000 caracteres.","ai");else try{this._closeCurrentStream(),sendBtn.disabled=!0,this.addMessage(messageText,"user"),input.value="",input.style.height="auto",this.scrollToBottom(),this.showTypingIndicator();const courseId=window.courseid||this.courseId||1;if(!courseId||isNaN(courseId))throw new Error("Course ID inválido");Ajax.call([{methodname:"local_datacurso_create_chat_message",args:{courseid:parseInt(courseId,10),lang:this._sanitizeString("es"),message:this._sanitizeString(messageText.substring(0,4e3))}}])[0].then((data=>{if(!data)throw new Error("Respuesta vacía del servidor");const streamUrl=data.stream_url||data.streamurl,sessionId=data.session_id||data.sessionId;if(!streamUrl)throw new Error("URL de stream ausente en la respuesta");this._startSSE(streamUrl,sessionId,sendBtn)})).catch((err=>{this.hideTypingIndicator(),this.addMessage("[Error] No se pudo iniciar el stream: "+(err.message||"Error desconocido"),"ai"),sendBtn.disabled=!1,window.console&&console.error("Chat error:",err),notification&&notification.exception&&notification.exception(err)}))}catch(error){this.hideTypingIndicator(),this.addMessage("[Error] Error interno: "+error.message,"ai"),sendBtn.disabled=!1,window.console&&console.error("Chat send error:",error)}}_sanitizeString(str){return"string"!=typeof str?"":str.replace(/[<>]/g,"")}_ensureAIMessageEl(){if(this.currentAIMessageEl)return this.currentAIMessageEl;const messages=this.chatWidget.querySelector("#chatMessages");let el=messages.querySelector("#typingIndicator");return el?(el.id="",el.classList.remove("typing-indicator"),el.className="datacurso-chat-message ai",el.innerHTML=""):(el=document.createElement("div"),el.className="datacurso-chat-message ai",el.textContent="",messages.appendChild(el)),this.currentAIMessageEl=el,el}_startSSE(streamUrl,sessionId,sendBtn){if(!streamUrl)return this._finalizeStream(sendBtn),void this.addMessage("[Error] URL de stream inválida","ai");if(this.chatWidget.querySelector("#chatMessages"))try{const es=new EventSource(streamUrl);this.currentEventSource=es,this.streaming=!0;let firstToken=!0,connectionTimeout=setTimeout((()=>{this.streaming&&firstToken&&(this._appendToAIMessage("[Timeout: El servidor tardó demasiado en responder]"),this._finalizeStream(sendBtn))}),3e4);es.addEventListener("open",(()=>{window.console&&console.log("SSE connection opened")})),es.addEventListener("meta",(()=>{})),es.addEventListener("token",(ev=>{try{connectionTimeout&&(clearTimeout(connectionTimeout),connectionTimeout=null);const t=JSON.parse(ev.data).t||"";firstToken&&(firstToken=!1,this._ensureAIMessageEl(),this.hideTypingIndicator()),this._appendToAIMessage(t)}catch(e){window.console&&console.warn("Invalid token data:",ev.data)}})),es.addEventListener("message_completed",(()=>{connectionTimeout&&clearTimeout(connectionTimeout),this._finalizeStream(sendBtn)})),es.addEventListener("error",(event=>{connectionTimeout&&clearTimeout(connectionTimeout),window.console&&console.error("SSE error:",event),this.currentAIMessageEl&&""!==this.currentAIMessageEl.textContent.trim()?this._appendToAIMessage("\n[Conexión interrumpida]"):this._appendToAIMessage("[Error de conexión con el servidor]"),this._finalizeStream(sendBtn)})),this.scrollToBottom()}catch(error){window.console&&console.error("Error starting SSE:",error),this.addMessage("[Error] No se pudo establecer conexión SSE","ai"),this._finalizeStream(sendBtn)}else this._finalizeStream(sendBtn)}_appendToAIMessage(text){if(this.currentAIMessageEl||this._ensureAIMessageEl(),!this.currentAIMessageEl||"string"!=typeof text)return;const currentText=this.currentAIMessageEl.textContent||"";if(currentText.length+text.length>1e4){const remaining=1e4-currentText.length;remaining>0&&(this.currentAIMessageEl.textContent+=text.substring(0,remaining)+"...")}else this.currentAIMessageEl.textContent+=text,this.scrollToBottom()}_closeCurrentStream(){if(this.currentEventSource)try{this.currentEventSource.close()}catch(e){window.console&&console.warn("Error closing EventSource:",e)}this.currentEventSource=null,this.streaming=!1,this.currentAIMessageEl=null,this.hideTypingIndicator()}_finalizeStream(sendBtn){this._closeCurrentStream(),sendBtn&&(sendBtn.disabled=!1)}addMessage(text,type){if(!text||"string"!=typeof text)return;const messages=this.chatWidget.querySelector("#chatMessages");if(!messages)return;const messageElement=document.createElement("div");messageElement.className="datacurso-chat-message ".concat(type);const sanitizedText=text.replace(/</g,"&lt;").replace(/>/g,"&gt;");messageElement.textContent=sanitizedText.substring(0,1e4),messages.appendChild(messageElement);const nodes=messages.querySelectorAll(".datacurso-chat-message:not(.typing-indicator)");if(nodes.length>100)for(let i=0;i<nodes.length-100;i++)nodes[i].remove();this.scrollToBottom()}showTypingIndicator(){try{const messages=this.chatWidget&&this.chatWidget.querySelector("#chatMessages");if(!messages)return;if(messages.querySelector("#typingIndicator"))return;const typingElement=document.createElement("div");typingElement.className="datacurso-chat-message ai typing-indicator",typingElement.id="typingIndicator",typingElement.innerHTML="<span></span><span></span><span></span>",messages.appendChild(typingElement),this.scrollToBottom()}catch(error){window.console&&console.warn("Error showing typing indicator:",error)}}hideTypingIndicator(){try{const typingIndicator=this.chatWidget&&this.chatWidget.querySelector("#typingIndicator");typingIndicator&&typingIndicator.remove()}catch(error){window.console&&console.warn("Error hiding typing indicator:",error)}}scrollToBottom(){try{const messages=this.chatWidget&&this.chatWidget.querySelector("#chatMessages");messages&&requestAnimationFrame((()=>{messages.scrollTop=messages.scrollHeight}))}catch(error){window.console&&console.warn("Error scrolling to bottom:",error)}}destroy(){this._closeCurrentStream(),this.chatWidget&&(this.chatWidget.remove(),this.chatWidget=null)}}let datacursoChatInstance=null;return{init:function(){datacursoChatInstance&&datacursoChatInstance.destroy();try{datacursoChatInstance=new DatacursoChat}catch(error){notification.exception(error)}},destroy:function(){datacursoChatInstance&&(datacursoChatInstance.destroy(),datacursoChatInstance=null)}}}));

//# sourceMappingURL=chat.min.js.map