{"version":3,"file":"tutor_ia_drawer.min.js","sources":["../src/tutor_ia_drawer.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tutor-IA Drawer - Drawer lateral para chat con IA\n *\n * @module     local_datacurso/tutor_ia_drawer\n * @copyright  2025 Datacurso\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/drawer',\n    'core/pubsub',\n    'core/custom_interaction_events',\n    'core/modal_backdrop',\n    'core/templates',\n    'core/local/aria/focuslock'\n], function(\n    $,\n    Ajax,\n    Notification,\n    Drawer,\n    PubSub,\n    CustomEvents,\n    ModalBackdrop,\n    Templates,\n    FocusLock\n) {\n    'use strict';\n\n    const SELECTORS = {\n        DRAWER: '[data-region=\"right-hand-drawer\"]',\n        DRAWER_CONTENT: '[data-region=\"tutor-ia-drawer\"]',\n        MESSAGES: '[data-region=\"tutor-ia-messages\"]',\n        INPUT: '[data-region=\"tutor-ia-input\"]',\n        SEND_BTN: '[data-action=\"send-message\"]',\n        CLOSE_BTN: '[data-action=\"close-drawer\"]',\n        TRIGGER: '[data-action=\"toggle-tutor-ia-drawer\"]',\n        BADGE: '[data-region=\"tutor-ia-badge\"]'\n    };\n\n    const EVENTS = {\n        SHOW: 'local_datacurso/tutor_ia_drawer/show',\n        HIDE: 'local_datacurso/tutor_ia_drawer/hide',\n        TOGGLE: 'local_datacurso/tutor_ia_drawer/toggle'\n    };\n\n    class TutorIADrawer {\n        constructor(root, uniqueId, courseId, userId) {\n            this.root = $(root);\n            this.uniqueId = uniqueId;\n            this.courseId = courseId;\n            this.userId = userId;\n            this.drawerRoot = null;\n            this.backdrop = null;\n            this.streaming = false;\n            this.currentEventSource = null;\n            this.currentSessionId = null;\n            this.currentAIMessageEl = null;\n\n            this.init();\n        }\n\n        init() {\n            this.drawerRoot = Drawer.getDrawerRoot(this.root);\n            if (!this.drawerRoot.length) {\n                window.console.error('Tutor-IA: No se encontró drawer root');\n                return;\n            }\n\n            this.setupBackdrop();\n            this.registerEventListeners();\n            this.registerTrigger();\n\n            window.addEventListener('beforeunload', () => this.cleanup());\n        }\n\n        setupBackdrop() {\n            Templates.render('core/modal_backdrop', {})\n                .then(html => {\n                    this.backdrop = new ModalBackdrop(html);\n                    const zIndex = window.getComputedStyle(this.drawerRoot[0]).zIndex;\n                    if (zIndex) {\n                        this.backdrop.setZIndex(zIndex - 1);\n                    }\n                    this.backdrop.getAttachmentPoint().get(0).addEventListener('click', () => {\n                        this.hide();\n                    });\n                    return this.backdrop;\n                })\n                .catch(Notification.exception);\n        }\n\n        registerEventListeners() {\n            // Close button\n            this.root.find(SELECTORS.CLOSE_BTN).on('click', (e) => {\n                e.preventDefault();\n                this.hide();\n            });\n\n            // Send button\n            this.root.find(SELECTORS.SEND_BTN).on('click', () => {\n                this.sendMessage();\n            });\n\n            // Input - Enter to send\n            const input = this.root.find(SELECTORS.INPUT);\n            input.on('keydown', (e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    this.sendMessage();\n                }\n            });\n\n            // Auto-resize textarea\n            input.on('input', function() {\n                this.style.height = 'auto';\n                this.style.height = Math.min(this.scrollHeight, 120) + 'px';\n            });\n\n            // PubSub events\n            PubSub.subscribe(EVENTS.SHOW, () => this.show());\n            PubSub.subscribe(EVENTS.HIDE, () => this.hide());\n            PubSub.subscribe(EVENTS.TOGGLE, () => this.toggle());\n\n            // Close drawer if message drawer opens\n            PubSub.subscribe('core_message/show', () => {\n                if (Drawer.isVisible(this.drawerRoot)) {\n                    this.hide();\n                }\n            });\n        }\n\n        registerTrigger() {\n            const trigger = $(SELECTORS.TRIGGER);\n            if (!trigger.length) {\n                return;\n            }\n\n            CustomEvents.define(trigger, [CustomEvents.events.activate]);\n            trigger.on(CustomEvents.events.activate, (e) => {\n                e.preventDefault();\n                this.toggle();\n            });\n        }\n\n        show() {\n            if (!this.drawerRoot.length) {\n                return;\n            }\n\n            // Close message drawer if open\n            PubSub.publish('core_message/hide', {});\n\n            // Show backdrop\n            if (this.backdrop) {\n                this.backdrop.show();\n                const pageWrapper = document.getElementById('page');\n                if (pageWrapper) {\n                    pageWrapper.style.overflow = 'hidden';\n                }\n            }\n\n            // Show drawer\n            Drawer.show(this.drawerRoot);\n\n            // Trap focus\n            FocusLock.trapFocus(this.root[0]);\n\n            // Update trigger\n            $(SELECTORS.TRIGGER).attr('aria-expanded', 'true');\n            $('body').addClass('tutor-ia-drawer-open');\n\n            // Focus close button\n            this.root.find(SELECTORS.CLOSE_BTN).focus();\n        }\n\n        hide() {\n            if (!this.drawerRoot.length) {\n                return;\n            }\n\n            // Hide backdrop\n            if (this.backdrop) {\n                this.backdrop.hide();\n                const pageWrapper = document.getElementById('page');\n                if (pageWrapper) {\n                    pageWrapper.style.overflow = 'visible';\n                }\n            }\n\n            // Hide drawer\n            Drawer.hide(this.drawerRoot);\n\n            // Release focus\n            FocusLock.untrapFocus();\n\n            // Update trigger\n            $(SELECTORS.TRIGGER).attr('aria-expanded', 'false').focus();\n            $('body').removeClass('tutor-ia-drawer-open');\n        }\n\n        toggle() {\n            if (Drawer.isVisible(this.drawerRoot)) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n\n        sendMessage() {\n            const input = this.root.find(SELECTORS.INPUT);\n            const sendBtn = this.root.find(SELECTORS.SEND_BTN);\n\n            const messageText = input.val().trim();\n            if (!messageText || this.streaming) {\n                return;\n            }\n\n            if (messageText.length > 4000) {\n                this.addMessage('[Error] El mensaje es demasiado largo. Máximo 4000 caracteres.', 'ai');\n                return;\n            }\n\n            try {\n                this.closeCurrentStream();\n                sendBtn.prop('disabled', true);\n\n                this.addMessage(messageText, 'user');\n                input.val('');\n                input.css('height', 'auto');\n                this.scrollToBottom();\n                this.showTypingIndicator();\n\n                const requests = Ajax.call([{\n                    methodname: \"local_datacurso_create_chat_message\",\n                    args: {\n                        courseid: parseInt(this.courseId, 10),\n                        message: this.sanitizeString(messageText.substring(0, 4000)),\n                        meta: JSON.stringify({\n                            user_role: 'Estudiante',\n                            timestamp: Math.floor(Date.now() / 1000)\n                        })\n                    },\n                }]);\n\n                requests[0]\n                    .then((data) => {\n                        if (!data || !data.stream_url) {\n                            throw new Error('URL de stream ausente en la respuesta');\n                        }\n                        this.currentSessionId = data.session_id;\n                        this.startSSE(data.stream_url, sendBtn);\n                    })\n                    .catch((err) => {\n                        this.hideTypingIndicator();\n                        this.addMessage('[Error] ' + (err.message || 'Error desconocido'), 'ai');\n                        sendBtn.prop('disabled', false);\n                        Notification.exception(err);\n                    });\n            } catch (error) {\n                this.hideTypingIndicator();\n                this.addMessage('[Error] Error interno: ' + error.message, 'ai');\n                sendBtn.prop('disabled', false);\n            }\n        }\n\n        startSSE(streamUrl, sendBtn) {\n            try {\n                const es = new EventSource(streamUrl);\n                this.currentEventSource = es;\n                this.streaming = true;\n                let firstToken = true;\n\n                const connectionTimeout = setTimeout(() => {\n                    if (this.streaming && firstToken) {\n                        this.appendToAIMessage('[Timeout: El servidor tardó demasiado en responder]');\n                        this.finalizeStream(sendBtn);\n                    }\n                }, 30000);\n\n                es.addEventListener('open', () => {\n                    window.console.log('SSE connection opened to Tutor-IA');\n                });\n\n                es.addEventListener('meta', () => {\n                    // Metadata event - can be logged if needed\n                });\n\n                es.addEventListener('token', (ev) => {\n                    try {\n                        if (connectionTimeout) {\n                            clearTimeout(connectionTimeout);\n                        }\n                        const payload = JSON.parse(ev.data);\n                        const text = payload.t || payload.content || '';\n\n                        if (firstToken) {\n                            firstToken = false;\n                            this.ensureAIMessageEl();\n                            this.hideTypingIndicator();\n                        }\n                        this.appendToAIMessage(text);\n                    } catch (e) {\n                        window.console.warn('Invalid token data:', ev.data);\n                    }\n                });\n\n                es.addEventListener('message_completed', () => {\n                    window.console.log('Message completed from Tutor-IA');\n                    if (connectionTimeout) {\n                        clearTimeout(connectionTimeout);\n                    }\n                    this.finalizeStream(sendBtn);\n                });\n\n                es.addEventListener('error', () => {\n                    if (connectionTimeout) {\n                        clearTimeout(connectionTimeout);\n                    }\n                    window.console.error('SSE error');\n                    if (!this.currentAIMessageEl || this.currentAIMessageEl.textContent.trim() === '') {\n                        this.appendToAIMessage('[Error de conexión con el servidor]');\n                    } else {\n                        this.appendToAIMessage('\\n[Conexión interrumpida]');\n                    }\n                    this.finalizeStream(sendBtn);\n                });\n            } catch (error) {\n                window.console.error('Error starting SSE:', error);\n                this.addMessage('[Error] No se pudo establecer conexión SSE', 'ai');\n                this.finalizeStream(sendBtn);\n            }\n        }\n\n        ensureAIMessageEl() {\n            if (this.currentAIMessageEl) {\n                return this.currentAIMessageEl;\n            }\n\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            let el = messages.find('.tutor-ia-typing');\n\n            if (el.length) {\n                el.removeClass('tutor-ia-typing');\n                el.addClass('tutor-ia-message ai');\n                el.html('');\n            } else {\n                el = $('<div class=\"tutor-ia-message ai\"></div>');\n                messages.append(el);\n            }\n\n            this.currentAIMessageEl = el[0];\n            return this.currentAIMessageEl;\n        }\n\n        appendToAIMessage(text) {\n            if (!this.currentAIMessageEl) {\n                this.ensureAIMessageEl();\n            }\n            if (!this.currentAIMessageEl || typeof text !== 'string') {\n                return;\n            }\n\n            const currentText = this.currentAIMessageEl.textContent || '';\n            const maxLength = 10000;\n\n            if (currentText.length + text.length > maxLength) {\n                const remaining = maxLength - currentText.length;\n                if (remaining > 0) {\n                    this.currentAIMessageEl.textContent += text.substring(0, remaining) + '...';\n                }\n                return;\n            }\n\n            this.currentAIMessageEl.textContent += text;\n            this.scrollToBottom();\n        }\n\n        addMessage(text, type) {\n            if (!text || typeof text !== 'string') {\n                return;\n            }\n\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            const messageEl = $('<div></div>')\n                .addClass('tutor-ia-message')\n                .addClass(type)\n                .text(text.substring(0, 10000));\n\n            messages.append(messageEl);\n            this.scrollToBottom();\n        }\n\n        showTypingIndicator() {\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            if (messages.find('.tutor-ia-typing').length) {\n                return;\n            }\n\n            const typing = $('<div class=\"tutor-ia-message ai tutor-ia-typing\"></div>')\n                .html('<span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span>');\n            messages.append(typing);\n            this.scrollToBottom();\n        }\n\n        hideTypingIndicator() {\n            this.root.find('.tutor-ia-typing').remove();\n        }\n\n        scrollToBottom() {\n            const messages = this.root.find(SELECTORS.MESSAGES);\n            if (messages.length && messages[0]) {\n                messages.scrollTop(messages[0].scrollHeight);\n            }\n        }\n\n        closeCurrentStream() {\n            if (this.currentEventSource) {\n                try {\n                    this.currentEventSource.close();\n                } catch (e) {\n                    window.console.warn('Error closing EventSource:', e);\n                }\n            }\n            this.currentEventSource = null;\n            this.streaming = false;\n            this.currentAIMessageEl = null;\n            this.hideTypingIndicator();\n        }\n\n        finalizeStream(sendBtn) {\n            this.closeCurrentStream();\n            if (sendBtn) {\n                sendBtn.prop('disabled', false);\n            }\n        }\n\n        sanitizeString(str) {\n            if (typeof str !== 'string') {\n                return '';\n            }\n            return str.replace(/[<>]/g, '');\n        }\n\n        cleanup() {\n            this.closeCurrentStream();\n            // Cleanup session if needed\n            if (this.currentSessionId && navigator.sendBeacon && window.M && window.M.cfg && window.M.cfg.wwwroot) {\n                const formData = new FormData();\n                formData.append('sesskey', window.M.cfg.sesskey || '');\n                formData.append('info', 'local_datacurso_delete_chat_session');\n\n                const params = [{\n                    index: 0,\n                    methodname: 'local_datacurso_delete_chat_session',\n                    args: {sessionid: this.currentSessionId}\n                }];\n\n                formData.append('args', JSON.stringify(params));\n                navigator.sendBeacon(window.M.cfg.wwwroot + '/lib/ajax/service.php', formData);\n            }\n            this.currentSessionId = null;\n        }\n\n        destroy() {\n            this.cleanup();\n            FocusLock.untrapFocus();\n            if (this.backdrop) {\n                this.backdrop.hide();\n            }\n        }\n    }\n\n    return {\n        init: function(root, uniqueId, courseId, userId) {\n            return new TutorIADrawer(root, uniqueId, courseId, userId);\n        }\n    };\n});\n"],"names":["define","$","Ajax","Notification","Drawer","PubSub","CustomEvents","ModalBackdrop","Templates","FocusLock","SELECTORS","EVENTS","TutorIADrawer","constructor","root","uniqueId","courseId","userId","drawerRoot","backdrop","streaming","currentEventSource","currentSessionId","currentAIMessageEl","init","getDrawerRoot","this","length","setupBackdrop","registerEventListeners","registerTrigger","window","addEventListener","cleanup","console","error","render","then","html","zIndex","getComputedStyle","setZIndex","getAttachmentPoint","get","hide","catch","exception","find","on","e","preventDefault","sendMessage","input","key","shiftKey","style","height","Math","min","scrollHeight","subscribe","show","toggle","isVisible","trigger","events","activate","publish","pageWrapper","document","getElementById","overflow","trapFocus","attr","addClass","focus","untrapFocus","removeClass","sendBtn","messageText","val","trim","addMessage","closeCurrentStream","prop","css","scrollToBottom","showTypingIndicator","call","methodname","args","courseid","parseInt","message","sanitizeString","substring","meta","JSON","stringify","user_role","timestamp","floor","Date","now","data","stream_url","Error","session_id","startSSE","err","hideTypingIndicator","streamUrl","es","EventSource","firstToken","connectionTimeout","setTimeout","appendToAIMessage","finalizeStream","log","ev","clearTimeout","payload","parse","text","t","content","ensureAIMessageEl","warn","textContent","messages","el","append","currentText","remaining","type","messageEl","typing","remove","scrollTop","close","str","replace","navigator","sendBeacon","M","cfg","wwwroot","formData","FormData","sesskey","params","index","sessionid","destroy"],"mappings":"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"}