{"version":3,"file":"course_streaming.min.js","sources":["../src/course_streaming.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course Streaming Module for handling real-time course generation\n *\n * @module     local_datacurso/course_streaming\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { createCourse } from \"local_datacurso/repository/chatbot\";\n\nlet htmlBuffer = \"\";\nlet rafPending = false;\n\n/**\n * Start course streaming from the provided URL\n * @param {string} streamingUrl - The EventSource URL for streaming\n * @param {Element} container - Container element for displaying results\n * @returns {Promise} Promise that resolves when streaming is complete\n */\nexport const startStreaming = async (streamingUrl, container) => {\n  const progressIndicator = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress']\"\n  );\n  const eventList = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming']\"\n  );\n  const progressIcon = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress/icon']\"\n  );\n\n  eventList.innerHTML = \"\";\n  if (progressIndicator) {\n    progressIndicator.style.display = \"block\";\n  }\n\n  const evtSource = new EventSource(streamingUrl);\n\n  evtSource.addEventListener(\"assistant_token\", (event) => {\n    appendToken(event.data, eventList);\n  });\n\n  evtSource.addEventListener(\"assistant_message_end\", () => {\n    progressIcon.innerHTML = `\n        <div class=\"bg-success rounded-circle d-flex align-items-center justify-content-center\" style=\"width: 1.5rem; height: 1.5rem;\">\n          <i class=\"text-white\" style=\"font-size: 0.8rem;\">✓</i>\n        </div>\n      `;\n    const planningActions = document.getElementById(\"course-planning-actions\");\n    if (planningActions) {\n      planningActions.style.display = \"block\";\n    }\n    evtSource.close();\n  });\n};\n\n/**\n * Helper to parse backend dict-like payloads\n * @param {string} raw - Raw data from event\n * @returns {Object|null} Parsed object or null\n */\nconst parseBest = (raw) => {\n  if (!raw) return null;\n  const s = String(raw).trim();\n  try {\n    return JSON.parse(s);\n  } catch (_) {}\n  try {\n    // Best-effort convert Python dict repr to JSON\n    let t = s\n      .replace(/'/g, '\"')\n      .replace(/\\bNone\\b/g, \"null\")\n      .replace(/\\bTrue\\b/g, \"true\")\n      .replace(/\\bFalse\\b/g, \"false\");\n    return JSON.parse(t);\n  } catch (_) {\n    return null;\n  }\n};\n\n/**\n * Add status message to the execution container\n * @param {string} message - Status message\n * @param {string} type - Status type (info, ok, error)\n * @param {Element} container - Container element\n */\nconst addStatus = (message, type, container) => {\n  const statusDiv = document.createElement(\"div\");\n  statusDiv.className = `alert alert-${\n    type === \"ok\" ? \"success\" : type === \"error\" ? \"danger\" : \"info\"\n  } mb-2`;\n  statusDiv.innerHTML = `<small>${message}</small>`;\n  container.appendChild(statusDiv);\n  container.scrollTop = container.scrollHeight;\n};\n\n/**\n * Start execution streaming from the provided URL\n * @param {string} streamingUrl - The EventSource URL for streaming\n * @param {Element} container - Container element for displaying results\n * @returns {Promise} Promise that resolves when streaming is complete\n */\nexport const startExecutionStreaming = async (\n  streamingUrl,\n  container,\n  courseid\n) => {\n  const progressIndicator = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress']\"\n  );\n  const eventList = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming']\"\n  );\n  const progressIcon = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress/icon']\"\n  );\n\n  console.log({ container, progressIndicator, eventList, progressIcon });\n  eventList.innerHTML = \"\";\n  if (progressIndicator) {\n    progressIndicator.style.display = \"block\";\n  }\n\n  const es = new EventSource(streamingUrl);\n\n  const onActStart = (e) => {\n    console.log(\"onActStart\", e);\n    const obj = parseBest(e.data) || {};\n    const idx = obj.index ?? \"?\";\n    const title = obj.title || \"\";\n    const sec = obj.section_index ?? \"?\";\n    addStatus(\n      `🧩 Iniciando actividad #${idx} (sección ${sec}): ${title}`,\n      \"info\",\n      eventList\n    );\n  };\n\n  const onActDone = (e) => {\n    console.log(\"onActDone\", e);\n    const obj = parseBest(e.data) || {};\n    const done = obj.done ?? 0;\n    const total = obj.total ?? 0;\n    const percent = obj.percent ?? 0;\n    addStatus(\n      `✅ Actividad completada (${done}/${total}) — ${percent}%`,\n      \"ok\",\n      eventList\n    );\n  };\n\n  const onProgress = (e) => {\n    console.log(\"onProgress\", e);\n    const obj = parseBest(e.data) || {};\n    const done = obj.done ?? 0;\n    const total = obj.total ?? 0;\n    const percent = obj.percent ?? 0;\n    addStatus(`📈 Progreso: ${done}/${total} (${percent}%)`, \"info\", eventList);\n  };\n\n  const onExecError = (e) => {\n    console.log(\"onExecError\", e);\n    addStatus(`❌ Error en una actividad`, \"error\", eventList);\n  };\n\n  const onComplete = async (e) => {\n    console.log(\"onComplete\", e);\n\n    // Close the EventSource connection first\n    es.close();\n    progressIcon.innerHTML = `\n        <div class=\"bg-success rounded-circle d-flex align-items-center justify-content-center\" style=\"width: 1.5rem; height: 1.5rem;\">\n          <i class=\"text-white\" style=\"font-size: 0.8rem;\">✓</i>\n        </div>\n      `;\n\n    // Call createCourse to apply the AI-generated content\n    try {\n      const result = await createCourse({ courseid });\n\n      if (result.success) {\n        addStatus(\"✅ Curso creado exitosamente\", \"ok\", eventList);\n        // Reload the page after 500ms\n        setTimeout(() => {\n          window.location.reload();\n        }, 500);\n      } else {\n        addStatus(\n          `❌ Error al crear el curso: ${result.message}`,\n          \"error\",\n          eventList\n        );\n      }\n    } catch (error) {\n      addStatus(\n        `❌ Error al crear el curso: ${error.message}`,\n        \"error\",\n        eventList\n      );\n    }\n  };\n\n  // Register event listeners\n  es.addEventListener(\"execution_activity_start\", onActStart);\n  es.addEventListener(\"execution_activity_done\", onActDone);\n  es.addEventListener(\"execution_progress\", onProgress);\n  es.addEventListener(\"execution_error\", onExecError);\n  es.addEventListener(\"execution_complete\", onComplete);\n};\n\nfunction updateHtmlSoon(container) {\n  if (rafPending) return;\n  rafPending = true;\n  requestAnimationFrame(() => {\n    rafPending = false;\n    container.innerHTML = htmlBuffer;\n    container.scrollTop = container.scrollHeight;\n  });\n}\n\nfunction appendToken(token, container) {\n  htmlBuffer += token;\n  updateHtmlSoon(container);\n}\n"],"names":["htmlBuffer","rafPending","async","streamingUrl","container","progressIndicator","querySelector","eventList","progressIcon","innerHTML","style","display","evtSource","EventSource","addEventListener","event","token","requestAnimationFrame","scrollTop","scrollHeight","updateHtmlSoon","appendToken","data","planningActions","document","getElementById","close","parseBest","raw","s","String","trim","JSON","parse","_","t","replace","addStatus","message","type","statusDiv","createElement","className","appendChild","courseid","console","log","es","e","obj","idx","index","title","sec","section_index","done","total","percent","result","success","setTimeout","window","location","reload","error"],"mappings":";;;;;;;;IA0BIA,WAAa,GACbC,YAAa,0BAQaC,MAAOC,aAAcC,mBAC3CC,kBAAoBD,UAAUE,cAClC,6DAEIC,UAAYH,UAAUE,cAC1B,oDAEIE,aAAeJ,UAAUE,cAC7B,kEAGFC,UAAUE,UAAY,GAClBJ,oBACFA,kBAAkBK,MAAMC,QAAU,eAG9BC,UAAY,IAAIC,YAAYV,cAElCS,UAAUE,iBAAiB,mBAAoBC,kBAsL5BC,MAAOZ,WAC1BJ,YAAcgB,eAXQZ,cAClBH,WAAY,OAChBA,YAAa,EACbgB,uBAAsB,KACpBhB,YAAa,EACbG,UAAUK,UAAYT,WACtBI,UAAUc,UAAYd,UAAUe,gBAMlCC,CAAehB,WAvLbiB,CAAYN,MAAMO,KAAMf,cAG1BK,UAAUE,iBAAiB,yBAAyB,KAClDN,aAAaC,sPAKPc,gBAAkBC,SAASC,eAAe,2BAC5CF,kBACFA,gBAAgBb,MAAMC,QAAU,SAElCC,UAAUc,kBASRC,UAAaC,UACZA,IAAK,OAAO,WACXC,EAAIC,OAAOF,KAAKG,kBAEbC,KAAKC,MAAMJ,GAClB,MAAOK,YAGHC,EAAIN,EACLO,QAAQ,KAAM,KACdA,QAAQ,YAAa,QACrBA,QAAQ,YAAa,QACrBA,QAAQ,aAAc,gBAClBJ,KAAKC,MAAME,GAClB,MAAOD,UACA,OAULG,UAAY,CAACC,QAASC,KAAMnC,mBAC1BoC,UAAYhB,SAASiB,cAAc,OACzCD,UAAUE,gCACC,OAATH,KAAgB,UAAqB,UAATA,KAAmB,SAAW,gBAE5DC,UAAU/B,2BAAsB6B,oBAChClC,UAAUuC,YAAYH,WACtBpC,UAAUc,UAAYd,UAAUe,+CASKjB,MACrCC,aACAC,UACAwC,kBAEMvC,kBAAoBD,UAAUE,cAClC,6DAEIC,UAAYH,UAAUE,cAC1B,oDAEIE,aAAeJ,UAAUE,cAC7B,kEAGFuC,QAAQC,IAAI,CAAE1C,UAAAA,UAAWC,kBAAAA,kBAAmBE,UAAAA,UAAWC,aAAAA,eACvDD,UAAUE,UAAY,GAClBJ,oBACFA,kBAAkBK,MAAMC,QAAU,eAG9BoC,GAAK,IAAIlC,YAAYV,cAgF3B4C,GAAGjC,iBAAiB,4BA9EAkC,sCAClBH,QAAQC,IAAI,aAAcE,SACpBC,IAAMtB,UAAUqB,EAAE1B,OAAS,GAC3B4B,uBAAMD,IAAIE,uCAAS,IACnBC,MAAQH,IAAIG,OAAS,GACrBC,+BAAMJ,IAAIK,+DAAiB,IACjCjB,4CAC6Ba,yBAAgBG,kBAASD,OACpD,OACA7C,cAsEJwC,GAAGjC,iBAAiB,2BAlEDkC,0CACjBH,QAAQC,IAAI,YAAaE,SACnBC,IAAMtB,UAAUqB,EAAE1B,OAAS,GAC3BiC,uBAAON,IAAIM,oCAAQ,EACnBC,yBAAQP,IAAIO,uCAAS,EACrBC,6BAAUR,IAAIQ,6CAAW,EAC/BpB,4CAC6BkB,iBAAQC,qBAAYC,aAC/C,KACAlD,cA0DJwC,GAAGjC,iBAAiB,sBAtDAkC,6CAClBH,QAAQC,IAAI,aAAcE,SACpBC,IAAMtB,UAAUqB,EAAE1B,OAAS,GAC3BiC,wBAAON,IAAIM,sCAAQ,EACnBC,0BAAQP,IAAIO,yCAAS,EACrBC,8BAAUR,IAAIQ,+CAAW,EAC/BpB,iCAA0BkB,iBAAQC,mBAAUC,cAAa,OAAQlD,cAiDnEwC,GAAGjC,iBAAiB,mBA9CCkC,IACnBH,QAAQC,IAAI,cAAeE,GAC3BX,qCAAsC,QAAS9B,cA6CjDwC,GAAGjC,iBAAiB,sBA1CDZ,MAAAA,IACjB2C,QAAQC,IAAI,aAAcE,GAG1BD,GAAGrB,QACHlB,aAAaC,0PAQLiD,aAAe,yBAAa,CAAEd,SAAAA,WAEhCc,OAAOC,SACTtB,UAAU,8BAA+B,KAAM9B,WAE/CqD,YAAW,KACTC,OAAOC,SAASC,WACf,MAEH1B,+CACgCqB,OAAOpB,SACrC,QACA/B,WAGJ,MAAOyD,OACP3B,+CACgC2B,MAAM1B,SACpC,QACA/B"}