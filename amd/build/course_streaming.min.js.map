{"version":3,"file":"course_streaming.min.js","sources":["../src/course_streaming.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course Streaming Module for handling real-time course generation\n *\n * @module     local_datacurso/course_streaming\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nfunction typeWriter(element, text, speed) {\n    return new Promise((resolve) => {\n      let i = 0;\n      function typing() {\n        if (i < text.length) {\n          element.textContent += text.charAt(i);\n          i++;\n          setTimeout(typing, speed);\n        } else {\n          resolve();\n        }\n      }\n      typing();\n    });\n  }\n\n/**\n * Start course streaming from the provided URL\n * @param {string} streamingUrl - The EventSource URL for streaming\n * @param {Element} container - Container element for displaying results\n * @returns {Promise} Promise that resolves when streaming is complete\n */\nexport const startStreaming = async (streamingUrl, container) => {\n    const progressIndicator = document.getElementById(\"progress-indicator\");\n    // const eventList = document.getElementById(\"list\");\n    const eventList = container.querySelector(\"[data-region='local_datacurso/course_streaming']\")\n    const progressIcon = document.getElementById(\"progress-icon\");\n  \n    eventList.innerHTML = \"\";\n    progressIndicator.style.display = \"block\";\n  \n    const evtSource = new EventSource(\n      streamingUrl\n    );\n  \n    evtSource.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      console.log(\"Received:\", data);\n  \n      switch (data.type) {\n        case \"section_start\":\n          const sectionHeader = document.createElement(\"div\");\n          sectionHeader.className = \"section-header bg-light p-3 mb-3 rounded\";\n          eventList.appendChild(sectionHeader);\n  \n          const title = document.createElement(\"h3\");\n          title.className = \"text-primary mb-2\";\n          sectionHeader.appendChild(title);\n          await typeWriter(\n            title,\n            `Sección ${data.section.section}: ${data.section.title}`,\n            20\n          );\n  \n          const hours = document.createElement(\"p\");\n          hours.className = \"mb-2 text-muted\";\n          sectionHeader.appendChild(hours);\n          await typeWriter(\n            hours,\n            `Horas teóricas: ${data.section.ht_hours} | Horas autónomas: ${data.section.had_hours}`,\n            15\n          );\n  \n          const objectives = document.createElement(\"p\");\n          objectives.className = \"mb-0\";\n          sectionHeader.appendChild(objectives);\n          await typeWriter(\n            objectives,\n            `Objetivos: ${data.section.objectives}`,\n            10\n          );\n          break;\n  \n        case \"activity\":\n          const activityItem = document.createElement(\"div\");\n          activityItem.className = \"activity-item card mb-2 ml-4\";\n          eventList.appendChild(activityItem);\n  \n          const cardBody = document.createElement(\"div\");\n          cardBody.className = \"card-body py-2\";\n          activityItem.appendChild(cardBody);\n  \n          const activityTitle = document.createElement(\"h5\");\n          activityTitle.className = \"card-title mb-1\";\n          cardBody.appendChild(activityTitle);\n          await typeWriter(activityTitle, data.activity.title, 25);\n  \n          const activityDesc = document.createElement(\"p\");\n          activityDesc.className = \"card-text mb-2\";\n          cardBody.appendChild(activityDesc);\n          await typeWriter(activityDesc, data.activity.description, 8);\n  \n          const resourceType = document.createElement(\"span\");\n          resourceType.className = \"badge badge-success\";\n          resourceType.textContent = data.activity.resource_type;\n          cardBody.appendChild(resourceType);\n          break;\n  \n        case \"section_end\":\n          const separator = document.createElement(\"hr\");\n          separator.className = \"my-4\";\n          eventList.appendChild(separator);\n          break;\n  \n        case \"complete\":\n          progressIcon.innerHTML = `\n              <div class=\"bg-success rounded-circle d-flex align-items-center justify-content-center\" style=\"width: 1.5rem; height: 1.5rem;\">\n                <i class=\"text-white\" style=\"font-size: 0.8rem;\">✓</i>\n              </div>\n            `;\n          const completionMsg = document.createElement(\"div\");\n          completionMsg.className = \"alert alert-success text-center mt-4\";\n          eventList.appendChild(completionMsg);\n          await typeWriter(completionMsg, \"✅ Plan del curso completado\", 50);\n          evtSource.close();\n          break;\n      }\n    };\n};\n"],"names":["typeWriter","element","text","speed","Promise","resolve","i","typing","length","textContent","charAt","setTimeout","async","streamingUrl","container","progressIndicator","document","getElementById","eventList","querySelector","progressIcon","innerHTML","style","display","evtSource","EventSource","onmessage","data","JSON","parse","event","console","log","type","sectionHeader","createElement","className","appendChild","title","section","hours","ht_hours","had_hours","objectives","activityItem","cardBody","activityTitle","activity","activityDesc","description","resourceType","resource_type","separator","completionMsg","close"],"mappings":";;;;;;;;SAwBSA,WAAWC,QAASC,KAAMC,cACxB,IAAIC,SAASC,cACdC,EAAI,YACCC,SACHD,EAAIJ,KAAKM,QACXP,QAAQQ,aAAeP,KAAKQ,OAAOJ,GACnCA,IACAK,WAAWJ,OAAQJ,QAEnBE,UAGJE,qHAUwBK,MAAOC,aAAcC,mBACzCC,kBAAoBC,SAASC,eAAe,sBAE5CC,UAAYJ,UAAUK,cAAc,oDACpCC,aAAeJ,SAASC,eAAe,iBAE7CC,UAAUG,UAAY,GACtBN,kBAAkBO,MAAMC,QAAU,cAE5BC,UAAY,IAAIC,YACpBZ,cAGFW,UAAUE,UAAYd,MAAAA,cACde,KAAOC,KAAKC,MAAMC,MAAMH,aAC9BI,QAAQC,IAAI,YAAaL,MAEjBA,KAAKM,UACN,sBACGC,cAAgBlB,SAASmB,cAAc,OAC7CD,cAAcE,UAAY,2CAC1BlB,UAAUmB,YAAYH,qBAEhBI,MAAQtB,SAASmB,cAAc,MACrCG,MAAMF,UAAY,oBAClBF,cAAcG,YAAYC,aACpBtC,WACJsC,wBACWX,KAAKY,QAAQA,qBAAYZ,KAAKY,QAAQD,OACjD,UAGIE,MAAQxB,SAASmB,cAAc,KACrCK,MAAMJ,UAAY,kBAClBF,cAAcG,YAAYG,aACpBxC,WACJwC,gCACmBb,KAAKY,QAAQE,wCAA+Bd,KAAKY,QAAQG,WAC5E,UAGIC,WAAa3B,SAASmB,cAAc,KAC1CQ,WAAWP,UAAY,OACvBF,cAAcG,YAAYM,kBACpB3C,WACJ2C,gCACchB,KAAKY,QAAQI,YAC3B,cAIC,iBACGC,aAAe5B,SAASmB,cAAc,OAC5CS,aAAaR,UAAY,+BACzBlB,UAAUmB,YAAYO,oBAEhBC,SAAW7B,SAASmB,cAAc,OACxCU,SAAST,UAAY,iBACrBQ,aAAaP,YAAYQ,gBAEnBC,cAAgB9B,SAASmB,cAAc,MAC7CW,cAAcV,UAAY,kBAC1BS,SAASR,YAAYS,qBACf9C,WAAW8C,cAAenB,KAAKoB,SAAST,MAAO,UAE/CU,aAAehC,SAASmB,cAAc,KAC5Ca,aAAaZ,UAAY,iBACzBS,SAASR,YAAYW,oBACfhD,WAAWgD,aAAcrB,KAAKoB,SAASE,YAAa,SAEpDC,aAAelC,SAASmB,cAAc,QAC5Ce,aAAad,UAAY,sBACzBc,aAAazC,YAAckB,KAAKoB,SAASI,cACzCN,SAASR,YAAYa,wBAGlB,oBACGE,UAAYpC,SAASmB,cAAc,MACzCiB,UAAUhB,UAAY,OACtBlB,UAAUmB,YAAYe,qBAGnB,WACHhC,aAAaC,8QAKPgC,cAAgBrC,SAASmB,cAAc,OAC7CkB,cAAcjB,UAAY,uCAC1BlB,UAAUmB,YAAYgB,qBAChBrD,WAAWqD,cAAe,8BAA+B,IAC/D7B,UAAU8B"}