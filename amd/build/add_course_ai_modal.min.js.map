{"version":3,"file":"add_course_ai_modal.min.js","sources":["../src/add_course_ai_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course AI Modal Module - Modern ES6 implementation\n *\n * @module     local_datacurso/add_course_ai_modal\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from \"core/templates\";\nimport Notification from \"core/notification\";\nimport Modal from \"core/modal\";\n// eslint-disable-next-line camelcase\nimport { get_string } from \"core/str\";\nimport chatbotRepository from \"local_datacurso/repository/chatbot\";\n\nlet modal = null;\n\n/**\n * Open the course AI chat modal\n * @param {Object} payload - The payload data for the course\n */\nexport const openCourseModal = async (payload = {}) => {\n  try {\n    // Close existing modal if open\n    if (modal) {\n      await modal.destroy();\n      modal = null;\n    }\n\n    // Render modal body template\n    const bodyHTML = await Templates.render(\n      \"local_datacurso/add_course_ai_modal\",\n      {}\n    );\n\n    // Get modal title\n    const title = await get_string(\"addcourseai_modaltitle\", \"local_datacurso\");\n\n    // Create modal\n    modal = await Modal.create({\n      title,\n      large: true,\n      show: true,\n      removeOnClose: true,\n    });\n\n    // Handle modal close event\n    modal.getRoot().on(\"hidden.bs.modal\", () => {\n      if (modal) {\n        modal.destroy();\n        modal = null;\n      }\n    });\n\n    // Set modal body\n    await modal.setBody(bodyHTML);\n\n    // Wire up chat handlers\n    const bodyEl = modal.getBody()[0];\n    wireChatHandlers(bodyEl, payload);\n  } catch (error) {\n    Notification.exception(error);\n  }\n};\n\n/**\n * Wire up chat handlers for the modal\n * @param {Element} container - The modal container element\n * @param {Object} payload - The payload data\n */\nconst wireChatHandlers = (container, payload) => {\n  const messagesEl = container.querySelector(\".bdai-messages\");\n  const form = container.querySelector(\"form.bdai-input\");\n  const textarea = form.querySelector(\"textarea\");\n  const sendBtn = form.querySelector(\".bdai-send\");\n\n  // Welcome message\n  get_string('addcourseai_welcome', 'local_datacurso').then((welcomeMsg) => {\n    pushAI(messagesEl, welcomeMsg);\n    return welcomeMsg;\n  }).catch(() => {\n    // Fallback welcome message\n    pushAI(messagesEl, 'Hi! Tell me what course you need and I will help you create it. 😊');\n  });\n\n  // Handle form submission\n  form.addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n    const prompt = textarea.value.trim();\n    if (!prompt) {\n      return;\n    }\n\n    // Get generate images option\n    const generateImages =\n      document.querySelector('input[name=\"generate_images\"]:checked')?.value ||\n      \"no\";\n\n    // Add user message\n    pushUser(messagesEl, prompt);\n    textarea.value = \"\";\n    textarea.focus();\n\n    // Disable form elements\n    setFormDisabled(true);\n    setLoading(sendBtn, true);\n    const typing = pushTyping(messagesEl);\n\n    try {\n      // Call API to create course\n      const response = await chatbotRepository.createCourse({\n        ...payload,\n        prompt,\n        generateimages: generateImages,\n      });\n\n      if (!response.ok) {\n        throw new Error(response.message);\n      }\n\n      removeTyping(typing);\n      renderWSResult(messagesEl, response);\n\n      // Reload page after success\n      setTimeout(() => {\n        window.location.reload();\n      }, 800);\n    } catch (error) {\n      removeTyping(typing);\n\n      if (!error) {\n        // Handle timeout case\n        const successMsg = await get_string(\n          \"coursecreatedsuccess\",\n          \"local_datacurso\"\n        );\n        pushAI(messagesEl, successMsg);\n        setTimeout(() => {\n          window.location.reload();\n        }, 800);\n      } else {\n        // Handle other errors\n        const errorMsg = await get_string(\n          \"addcourseai_error\",\n          \"local_datacurso\"\n        );\n        pushAI(messagesEl, `❌ ${errorMsg}`);\n      }\n    } finally {\n      setFormDisabled(false);\n      setLoading(sendBtn, false);\n      scrollToBottom(messagesEl);\n    }\n  });\n\n  // Handle Enter key for sending\n  textarea.addEventListener(\"keydown\", (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      form.requestSubmit();\n    }\n  });\n\n  /**\n   * Enable/disable form elements\n   * @param {boolean} disabled - Whether to disable the form\n   */\n  function setFormDisabled(disabled) {\n    textarea.disabled = disabled;\n    sendBtn.disabled = disabled;\n    const radioButtons = document.querySelectorAll(\n      'input[name=\"generate_images\"]'\n    );\n    radioButtons.forEach((rb) => {\n      rb.disabled = disabled;\n    });\n  }\n};\n\n/**\n * Add user message bubble\n * @param {Element} wrap - Messages container\n * @param {string} text - Message text\n */\nconst pushUser = (wrap, text) => addBubble(wrap, text, \"user\");\n\n/**\n * Add AI message bubble\n * @param {Element} wrap - Messages container\n * @param {string} text - Message text\n */\nconst pushAI = (wrap, text) => addBubble(wrap, text, \"ai\");\n\n/**\n * Add message bubble\n * @param {Element} wrap - Messages container\n * @param {string} text - Message text\n * @param {string} role - Message role (user/ai)\n */\nconst addBubble = (wrap, text, role) => {\n  const row = document.createElement(\"div\");\n  row.className = `bdai-msg ${role}`;\n  const bubble = document.createElement(\"div\");\n  bubble.className = \"bubble\";\n  bubble.textContent = text;\n  row.appendChild(bubble);\n  wrap.appendChild(row);\n  scrollToBottom(wrap);\n};\n\n/**\n * Add typing indicator\n * @param {Element} wrap - Messages container\n * @returns {Element} The typing element\n */\nconst pushTyping = (wrap) => {\n  const row = document.createElement(\"div\");\n  row.className = \"bdai-msg ai bdai-typing\";\n  const bubble = document.createElement(\"div\");\n  bubble.className = \"bubble\";\n  bubble.innerHTML =\n    '<span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span>';\n  row.appendChild(bubble);\n  wrap.appendChild(row);\n  scrollToBottom(wrap);\n  return row;\n};\n\n/**\n * Remove typing indicator\n * @param {Element} el - The typing element to remove\n */\nconst removeTyping = (el) => el?.remove();\n\n/**\n * Scroll messages to bottom\n * @param {Element} wrap - Messages container\n */\nconst scrollToBottom = (wrap) => {\n  wrap.scrollTop = wrap.scrollHeight;\n};\n\n/**\n * Set loading state for button\n * @param {Element} btn - Button element\n * @param {boolean} isLoading - Loading state\n */\nconst setLoading = (btn, isLoading) => {\n  btn.disabled = isLoading;\n  btn.style.opacity = isLoading ? 0.7 : 1;\n};\n\n/**\n * Render WebService result\n * @param {Element} wrap - Messages container\n * @param {Object} response - API response\n */\nconst renderWSResult = (wrap, response) => {\n  const lines = [];\n\n  if (response?.success === false) {\n    if (response?.message) {\n      pushAI(wrap, response.message);\n    } else {\n      get_string(\"addcourseai_faildefault\", \"local_datacurso\").then((msg) => {\n        pushAI(wrap, msg);\n        return msg;\n      }).catch(() => {\n        pushAI(wrap, 'It was not possible to create the course.');\n      });\n    }\n    return;\n  }\n\n  if (response?.message) {\n    lines.push(response.message);\n  }\n\n  if (lines.length) {\n    pushAI(wrap, lines.join(\"\\n\"));\n    setTimeout(() => {\n      const last = wrap.querySelector(\".bdai-msg.ai:last-child .bubble\");\n      if (last) {\n        last.textContent = lines.join(\"\\n\");\n      }\n    }, 50);\n  } else {\n    get_string(\"addcourseai_done\", \"local_datacurso\").then((msg) => {\n      pushAI(wrap, msg);\n      return msg;\n    }).catch(() => {\n      pushAI(wrap, 'Done! The course was created successfully.');\n    });\n  }\n};\n"],"names":["modal","async","payload","destroy","bodyHTML","Templates","render","title","Modal","create","large","show","removeOnClose","getRoot","on","setBody","bodyEl","getBody","wireChatHandlers","error","exception","container","messagesEl","querySelector","form","textarea","sendBtn","setFormDisabled","disabled","document","querySelectorAll","forEach","rb","then","welcomeMsg","pushAI","catch","addEventListener","e","preventDefault","prompt","value","trim","generateImages","pushUser","focus","setLoading","typing","pushTyping","response","chatbotRepository","createCourse","generateimages","ok","Error","message","removeTyping","renderWSResult","setTimeout","window","location","reload","errorMsg","successMsg","scrollToBottom","key","shiftKey","requestSubmit","wrap","text","addBubble","role","row","createElement","className","bubble","textContent","appendChild","innerHTML","el","remove","scrollTop","scrollHeight","btn","isLoading","style","opacity","lines","success","push","length","join","last","msg"],"mappings":"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"}