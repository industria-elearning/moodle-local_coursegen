{"version":3,"file":"add_activity_ai_button.min.js","sources":["../src/add_activity_ai_button.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Templates from 'core/templates';\nimport {openChatModal} from 'local_coursegen/add_activity_ai';\n/**\n * TODO describe module add_activity_ai_button\n *\n * @param {number} courseid - The course ID to add activity AI button for\n * @module     local_coursegen/add_activity_ai_button\n * @copyright  2025 Wilber Narvaez <https://datacurso.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport function init(courseid) {\n    const containers = document.querySelectorAll('.divider-content:has([data-action=\"open-chooser\"])');\n    containers.forEach(container => {\n        injectButton(container, courseid);\n    });\n}\n\n/**\n * Inject the add activity AI button into the container.\n *\n * @param {HTMLElement} container - The container to inject the button into\n * @param {number} courseid - The course ID to add activity AI button for\n */\nexport async function injectButton(container, courseid) {\n    const openChooserButton = container.querySelector('[data-action=\"open-chooser\"]');\n    if (!openChooserButton) {\n        return;\n    }\n    const sectionnum = openChooserButton.dataset.sectionnum;\n    const beforemod = openChooserButton.dataset.beforemod;\n    const arialabel = openChooserButton.getAttribute('aria-label');\n\n    const {html} = await Templates.renderForPromise(\n        'local_coursegen/add_activity_ai_button',\n        {\n            sectionnum,\n            beforemod,\n            arialabel,\n        }\n    );\n\n    container.insertAdjacentHTML('beforeend', html);\n    const addActivityAiButton = container.querySelector('.local_coursegen-add-activity-ai-button');\n    addActivityAiButton.addEventListener('click', () => {\n        openChatModal({\n            sectionnum,\n            beforemod,\n            courseid,\n        });\n    });\n}"],"names":["injectButton","container","courseid","openChooserButton","querySelector","sectionnum","dataset","beforemod","arialabel","getAttribute","html","Templates","renderForPromise","insertAdjacentHTML","addEventListener","document","querySelectorAll","forEach"],"mappings":";;;;;;;;oBAsCsBA,aAAaC,UAAWC,gBACpCC,kBAAoBF,UAAUG,cAAc,oCAC7CD,+BAGCE,WAAaF,kBAAkBG,QAAQD,WACvCE,UAAYJ,kBAAkBG,QAAQC,UACtCC,UAAYL,kBAAkBM,aAAa,eAE3CC,KAACA,YAAcC,mBAAUC,iBAC3B,yCACA,CACIP,WAAAA,WACAE,UAAAA,UACAC,UAAAA,YAIRP,UAAUY,mBAAmB,YAAaH,MACdT,UAAUG,cAAc,2CAChCU,iBAAiB,SAAS,wCAC5B,CACVT,WAAAA,WACAE,UAAAA,UACAL,SAAAA,6FArCSA,UACEa,SAASC,iBAAiB,sDAClCC,SAAQhB,YACfD,aAAaC,UAAWC"}