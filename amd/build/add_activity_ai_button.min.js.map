{"version":3,"file":"add_activity_ai_button.min.js","sources":["../src/add_activity_ai_button.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport Templates from 'core/templates';\nimport { openChatModal } from 'local_datacurso/add_activity_ai';\n/**\n * TODO describe module add_activity_ai_button\n *\n * @module     local_datacurso/add_activity_ai_button\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport function init(courseid) {\n    const containers = document.querySelectorAll('.divider-content:has([data-action=\"open-chooser\"])');\n    containers.forEach(container => {\n        injectButton(container, courseid);\n    });\n}\n\nexport function injectButton(container, courseid) {\n    const openChooserButton = container.querySelector('[data-action=\"open-chooser\"]');\n    if (!openChooserButton) {\n        return;\n    }\n    const sectionnum = openChooserButton.dataset.sectionnum;\n    const beforemod = openChooserButton.dataset.beforemod;\n    const arialabel = openChooserButton.getAttribute('aria-label');\n    \n    Templates.renderForPromise(\n        'local_datacurso/add_activity_ai_button',\n        {\n            sectionnum,\n            beforemod,\n            arialabel,\n        }\n      ).then(({ html }) => {\n        container.insertAdjacentHTML('beforeend', html);\n        const addActivityAiButton = container.querySelector('.local_datacurso-add-activity-ai-button');\n        addActivityAiButton.addEventListener('click', () => {\n            openChatModal({\n                sectionnum,\n                beforemod,\n                arialabel,\n                courseid,\n            });\n        });\n      }).catch((error) => {\n        console.error(error);\n      });\n}"],"names":["injectButton","container","courseid","openChooserButton","querySelector","sectionnum","dataset","beforemod","arialabel","getAttribute","renderForPromise","then","_ref","html","insertAdjacentHTML","addEventListener","catch","error","console","document","querySelectorAll","forEach"],"mappings":";;;;;;;cAgCgBA,aAAaC,UAAWC,gBAC9BC,kBAAoBF,UAAUG,cAAc,oCAC7CD,+BAGCE,WAAaF,kBAAkBG,QAAQD,WACvCE,UAAYJ,kBAAkBG,QAAQC,UACtCC,UAAYL,kBAAkBM,aAAa,iCAEvCC,iBACN,yCACA,CACIL,WAAAA,WACAE,UAAAA,UACAC,UAAAA,YAEJG,MAAKC,WAACC,KAAEA,WACRZ,UAAUa,mBAAmB,YAAaD,MACdZ,UAAUG,cAAc,2CAChCW,iBAAiB,SAAS,wCAC5B,CACVV,WAAAA,WACAE,UAAAA,UACAC,UAAAA,UACAN,SAAAA,iBAGPc,OAAOC,QACRC,QAAQD,MAAMA,yFAnCDf,UACEiB,SAASC,iBAAiB,sDAClCC,SAAQpB,YACfD,aAAaC,UAAWC"}