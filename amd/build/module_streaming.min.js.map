{"version":3,"file":"module_streaming.min.js","sources":["../src/module_streaming.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module Streaming Module for handling real-time module generation\n *\n * @module     local_datacurso/module_streaming\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { get_string } from \"core/str\";\n\n/**\n * Helper to parse backend dict-like payloads\n * @param {string} raw - Raw data from event\n * @returns {Object|null} Parsed object or null\n */\nconst parseBest = (raw) => {\n  if (!raw) return null;\n  const s = String(raw).trim();\n  try {\n    return JSON.parse(s);\n  } catch (_) {}\n  try {\n    // Best-effort convert Python dict repr to JSON\n    let t = s\n      .replace(/'/g, '\"')\n      .replace(/\\bNone\\b/g, \"null\")\n      .replace(/\\bTrue\\b/g, \"true\")\n      .replace(/\\bFalse\\b/g, \"false\");\n    return JSON.parse(t);\n  } catch (_) {\n    return null;\n  }\n};\n\n/**\n * Add status message to the streaming container\n * @param {string} message - Status message\n * @param {string} type - Status type (info, success, warning, error)\n * @param {Element} container - Container element\n */\nconst addStatus = (message, type, container) => {\n  const statusDiv = document.createElement(\"div\");\n  statusDiv.className = `alert alert-${\n    type === \"success\" ? \"success\" : type === \"error\" ? \"danger\" : type === \"warning\" ? \"warning\" : \"info\"\n  } mb-2`;\n  statusDiv.innerHTML = `<small>${message}</small>`;\n  container.appendChild(statusDiv);\n  container.scrollTop = container.scrollHeight;\n};\n\n/**\n * Start module streaming from the provided URL\n * @param {string} streamingUrl - The EventSource URL for streaming\n * @param {Element} container - Container element for displaying results\n * @param {Object} params - Additional parameters (courseid, sectionnum, beforemod)\n */\nexport const startModuleStreaming = async (streamingUrl, container, params = {}) => {\n  const progressIndicator = container.querySelector(\n    \"[data-region='local_datacurso/module_streaming/progress']\"\n  );\n  const eventList = container.querySelector(\n    \"[data-region='local_datacurso/module_streaming']\"\n  );\n  const progressIcon = container.querySelector(\n    \"[data-region='local_datacurso/module_streaming/progress/icon']\"\n  );\n\n  console.log(\"Starting module streaming:\", { streamingUrl, container, params });\n\n  // Clear previous content\n  if (eventList) {\n    eventList.innerHTML = \"\";\n  }\n  if (progressIndicator) {\n    progressIndicator.style.display = \"block\";\n  }\n\n  const es = new EventSource(streamingUrl);\n\n  // Event handlers for module creation steps\n  const onResourceStart = async (e) => {\n    console.log(\"onResourceStart\", e);\n    const obj = parseBest(e.data) || {};\n    addStatus(\"Iniciando creación del módulo...\", \"info\", eventList);\n  };\n\n  const onIntentContextStart = async (e) => {\n    console.log(\"onIntentContextStart\", e);\n    addStatus(\"Analizando intención y contexto...\", \"info\", eventList);\n  };\n\n  const onIntentContextDone = async (e) => {\n    console.log(\"onIntentContextDone\", e);\n    addStatus(\"✓ Intención y contexto analizados\", \"success\", eventList);\n  };\n\n  const onSchemaStart = async (e) => {\n    console.log(\"onSchemaStart\", e);\n    addStatus(\"Generando esquema del módulo...\", \"info\", eventList);\n  };\n\n  const onSchemaDone = async (e) => {\n    console.log(\"onSchemaDone\", e);\n    addStatus(\"✓ Esquema del módulo generado\", \"success\", eventList);\n  };\n\n  const onDateStart = async (e) => {\n    console.log(\"onDateStart\", e);\n    addStatus(\"Procesando fechas...\", \"info\", eventList);\n  };\n\n  const onDateDone = async (e) => {\n    console.log(\"onDateDone\", e);\n    addStatus(\"✓ Fechas procesadas\", \"success\", eventList);\n  };\n\n  const onParametersStart = async (e) => {\n    console.log(\"onParametersStart\", e);\n    addStatus(\"Configurando parámetros...\", \"info\", eventList);\n  };\n\n  const onParametersDone = async (e) => {\n    console.log(\"onParametersDone\", e);\n    addStatus(\"✓ Parámetros configurados\", \"success\", eventList);\n  };\n\n  const onImagesStart = async (e) => {\n    console.log(\"onImagesStart\", e);\n    addStatus(\"Generando imágenes...\", \"info\", eventList);\n  };\n\n  const onImagesDone = async (e) => {\n    console.log(\"onImagesDone\", e);\n    addStatus(\"✓ Imágenes generadas\", \"success\", eventList);\n  };\n\n  const onOutputStart = async (e) => {\n    console.log(\"onOutputStart\", e);\n    addStatus(\"Preparando salida final...\", \"info\", eventList);\n  };\n\n  const onOutputDone = async (e) => {\n    console.log(\"onOutputDone\", e);\n    addStatus(\"✓ Salida preparada\", \"success\", eventList);\n  };\n\n  const onResourceComplete = async (e) => {\n    console.log(\"onResourceComplete\", e);\n\n    // Close the EventSource connection first\n    es.close();\n    \n    if (progressIcon) {\n      progressIcon.innerHTML = `\n        <div class=\"bg-success rounded-circle d-flex align-items-center justify-content-center\" style=\"width: 1.5rem; height: 1.5rem;\">\n          <i class=\"text-white\" style=\"font-size: 0.8rem;\">✓</i>\n        </div>\n      `;\n    }\n\n    addStatus(\"✓ Generación del módulo completada\", \"success\", eventList);\n\n    try {\n      const { createMod } = await import('local_datacurso/repository/chatbot');\n      const response = await createMod({\n        courseid: params.courseid,\n        sectionnum: params.sectionnum,\n        beforemod: params.beforemod,\n        prompt: '', // No se usa cuando se envía jobid.\n        generateimages: 0,\n        jobid: params.jobid,\n      });\n      if (response && response.ok) {\n        addStatus(\"✓ Módulo creado exitosamente\", \"success\", eventList);\n      } else {\n        const msg = (response && response.message) ? response.message : 'No se pudo crear el módulo.';\n        addStatus(`❌ ${msg}`, \"error\", eventList);\n      }\n    } catch (err) {\n      console.error('Error al crear el módulo desde resource_complete:', err);\n      addStatus(`❌ Error creando el módulo: ${err?.message || err}`, \"error\", eventList);\n    }\n  };\n\n  const onError = async (e) => {\n    console.error(\"Streaming error:\", e);\n    es.close();\n    addStatus(\"❌ Error en la creación del módulo\", \"error\", eventList);\n  };\n\n  // Register event listeners for all module creation steps\n  es.addEventListener(\"resource_start\", onResourceStart);\n  es.addEventListener(\"resource_intent_context_start\", onIntentContextStart);\n  es.addEventListener(\"resource_intent_context_done\", onIntentContextDone);\n  es.addEventListener(\"resource_schema_start\", onSchemaStart);\n  es.addEventListener(\"resource_schema_done\", onSchemaDone);\n  es.addEventListener(\"resource_date_start\", onDateStart);\n  es.addEventListener(\"resource_date_done\", onDateDone);\n  es.addEventListener(\"resource_parameters_start\", onParametersStart);\n  es.addEventListener(\"resource_parameters_done\", onParametersDone);\n  es.addEventListener(\"resource_images_start\", onImagesStart);\n  es.addEventListener(\"resource_images_done\", onImagesDone);\n  es.addEventListener(\"resource_output_start\", onOutputStart);\n  es.addEventListener(\"resource_output_done\", onOutputDone);\n  es.addEventListener(\"resource_complete\", onResourceComplete);\n  es.addEventListener(\"error\", onError);\n};\n"],"names":["parseBest","raw","s","String","trim","JSON","parse","_","t","replace","addStatus","message","type","container","statusDiv","document","createElement","className","innerHTML","appendChild","scrollTop","scrollHeight","async","streamingUrl","params","progressIndicator","querySelector","eventList","progressIcon","console","log","style","display","es","EventSource","onResourceStart","e","data","onIntentContextStart","onIntentContextDone","onSchemaStart","onSchemaDone","onDateStart","onDateDone","onParametersStart","onParametersDone","onImagesStart","onImagesDone","onOutputStart","onOutputDone","onResourceComplete","close","createMod","response","courseid","sectionnum","beforemod","prompt","generateimages","jobid","ok","msg","err","error","onError","addEventListener"],"mappings":"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"}