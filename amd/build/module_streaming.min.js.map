{"version":3,"file":"module_streaming.min.js","sources":["../src/module_streaming.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module Streaming Module for handling real-time module generation\n *\n * @module     local_datacurso/module_streaming\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { get_string } from \"core/str\";\nimport { createMod } from \"local_datacurso/repository/chatbot\";\n\n// Global state for scroll behavior\nlet userHasScrolled = false;\nlet scrollTimeout = null;\n\n/**\n * Check if user is at the bottom of the scrollable container\n * @param {Element} element - The scrollable element\n * @returns {boolean} - True if user is at bottom\n */\nconst isAtBottom = (element) => {\n  const threshold = 50; // 50px threshold\n  return element.scrollTop + element.clientHeight >= element.scrollHeight - threshold;\n};\n\n/**\n * Setup scroll detection to pause auto-scroll when user scrolls manually\n * @param {Element} scrollContainer - The container to monitor for scroll\n */\nconst setupScrollDetection = (scrollContainer) => {\n  if (!scrollContainer) return;\n  \n  const handleScroll = () => {\n    // Clear existing timeout\n    if (scrollTimeout) {\n      clearTimeout(scrollTimeout);\n    }\n    \n    // Mark that user has scrolled\n    userHasScrolled = true;\n    \n    // Check if user scrolled back to bottom\n    if (isAtBottom(scrollContainer)) {\n      // Reset flag after a short delay to resume auto-scroll\n      scrollTimeout = setTimeout(() => {\n        userHasScrolled = false;\n      }, 1000);\n    }\n  };\n  \n  scrollContainer.addEventListener('scroll', handleScroll, { passive: true });\n};\n\n/**\n * Add status message to the streaming container with smart scrolling\n * @param {string} message - Status message\n * @param {string} type - Status type (info, success, warning, error)\n * @param {Element} container - Container element\n */\nconst addStatus = (message, type, container) => {\n  const statusDiv = document.createElement(\"div\");\n  statusDiv.className = `alert alert-${\n    type === \"success\" ? \"success\" : type === \"error\" ? \"danger\" : type === \"warning\" ? \"warning\" : \"info\"\n  } mb-2`;\n  statusDiv.innerHTML = `<small>${message}</small>`;\n  container.appendChild(statusDiv);\n  \n  // Only auto-scroll if user hasn't manually scrolled\n  if (!userHasScrolled) {\n    const modalBody = document.querySelector('.modal-body');\n    if (modalBody) {\n      modalBody.scrollTop = modalBody.scrollHeight;\n    } else {\n      container.scrollTop = container.scrollHeight;\n    }\n  }\n};\n\n/**\n * Start module streaming from the provided URL\n * @param {string} streamingUrl - The EventSource URL for streaming\n * @param {Element} container - Container element for displaying results\n * @param {Object} params - Additional parameters (courseid, sectionnum, beforemod)\n */\nexport const startModuleStreaming = async (streamingUrl, container, params = {}) => {\n  const progressIndicator = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress']\"\n  );\n  const eventList = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming']\"\n  );\n  const progressIcon = container.querySelector(\n    \"[data-region='local_datacurso/course_streaming/progress/icon']\"\n  );\n\n  // Clear previous content\n  if (eventList) {\n    eventList.innerHTML = \"\";\n  }\n  if (progressIndicator) {\n    progressIndicator.style.display = \"block\";\n  }\n\n  // Reset scroll state for new streaming session\n  userHasScrolled = false;\n  if (scrollTimeout) {\n    clearTimeout(scrollTimeout);\n    scrollTimeout = null;\n  }\n\n  // Setup scroll detection on modal body\n  const modalBody = document.querySelector('.modal-body');\n  if (modalBody) {\n    setupScrollDetection(modalBody);\n  }\n\n  const es = new EventSource(streamingUrl);\n\n  // Essential event handlers for module creation\n  const onResourceStart = async (e) => {\n    console.log(\"onResourceStart\", e);\n    const message = await get_string('module_streaming_start', 'local_datacurso');\n    addStatus(message, \"info\", eventList);\n  };\n\n  const onSchemaStart = async (e) => {\n    console.log(\"onSchemaStart\", e);\n    const message = await get_string('module_streaming_schema_start', 'local_datacurso');\n    addStatus(message, \"info\", eventList);\n  };\n\n  const onSchemaDone = async (e) => {\n    console.log(\"onSchemaDone\", e);\n    const message = await get_string('module_streaming_schema_done', 'local_datacurso');\n    addStatus(message, \"success\", eventList);\n  };\n\n  const onImagesStart = async (e) => {\n    console.log(\"onImagesStart\", e);\n    const message = await get_string('module_streaming_images_start', 'local_datacurso');\n    addStatus(message, \"info\", eventList);\n  };\n\n  const onImagesDone = async (e) => {\n    console.log(\"onImagesDone\", e);\n    const message = await get_string('module_streaming_images_done', 'local_datacurso');\n    addStatus(message, \"success\", eventList);\n  };\n\n  const onParametersStart = async (e) => {\n    console.log(\"onParametersStart\", e);\n    const message = await get_string('module_streaming_parameters_start', 'local_datacurso');\n    addStatus(message, \"info\", eventList);\n  };\n\n  const onParametersDone = async (e) => {\n    console.log(\"onParametersDone\", e);\n    const message = await get_string('module_streaming_parameters_done', 'local_datacurso');\n    addStatus(message, \"success\", eventList);\n  };\n\n  const onOutputStart = async (e) => {\n    console.log(\"onOutputStart\", e);\n    const message = await get_string('module_streaming_output_start', 'local_datacurso');\n    addStatus(message, \"info\", eventList);\n  };\n\n  const onResourceComplete = async (e) => {\n    console.log(\"onResourceComplete\", e);\n\n    // Close the EventSource connection first\n    es.close();\n    \n    if (progressIcon) {\n      progressIcon.innerHTML = `\n        <div class=\"bg-success rounded-circle d-flex align-items-center justify-content-center\" style=\"width: 1.5rem; height: 1.5rem;\">\n          <i class=\"text-white\" style=\"font-size: 0.8rem;\">✓</i>\n        </div>\n      `;\n    }\n\n    const completeMessage = await get_string('module_streaming_complete', 'local_datacurso');\n    addStatus(completeMessage, \"success\", eventList);\n\n    try {\n      const { createMod } = await import('local_datacurso/repository/chatbot');\n      const response = await createMod({\n        courseid: params.courseid,\n        sectionnum: params.sectionnum,\n        beforemod: params.beforemod,\n        jobid: params.jobid,\n      });\n      if (response && response.ok) {\n        const successMessage = await get_string('module_streaming_added_success', 'local_datacurso');\n        addStatus(successMessage, \"success\", eventList);\n        setTimeout(() => {\n          window.location.href = response.data.activityurl;\n        }, 1000);\n      } else {\n        const defaultError = await get_string('module_streaming_add_error', 'local_datacurso');\n        const msg = (response && response.message) ? response.message : defaultError;\n        addStatus(`⚠️ ${msg}`, \"error\", eventList);\n      }\n    } catch (err) {\n      console.error('Error al crear la actividad desde resource_complete:', err);\n      const errorMessage = await get_string('module_streaming_add_problem', 'local_datacurso', err?.message || err);\n      addStatus(`⚠️ ${errorMessage}`, \"error\", eventList);\n    }\n  };\n\n  const onError = async (e) => {\n    console.error(\"Streaming error:\", e);\n    es.close();\n    const errorMessage = await get_string('module_streaming_creation_error', 'local_datacurso');\n    addStatus(errorMessage, \"error\", eventList);\n  };\n\n  const generateImages = Number(params.generateimages) || 0;\n\n  // Register only essential event listeners for better user experience\n  es.addEventListener(\"resource_start\", onResourceStart);\n  es.addEventListener(\"resource_schema_start\", onSchemaStart);\n  es.addEventListener(\"resource_schema_done\", onSchemaDone);\n  if (generateImages === 1) {\n    es.addEventListener(\"resource_images_start\", onImagesStart);\n    es.addEventListener(\"resource_images_done\", onImagesDone);\n  }\n  es.addEventListener(\"resource_parameters_start\", onParametersStart);\n  es.addEventListener(\"resource_parameters_done\", onParametersDone);\n  es.addEventListener(\"resource_output_start\", onOutputStart);\n  es.addEventListener(\"resource_complete\", onResourceComplete);\n  es.addEventListener(\"error\", onError);\n};\n"],"names":["userHasScrolled","scrollTimeout","setupScrollDetection","scrollContainer","addEventListener","element","clearTimeout","scrollTop","clientHeight","scrollHeight","setTimeout","passive","addStatus","message","type","container","statusDiv","document","createElement","className","innerHTML","appendChild","modalBody","querySelector","async","streamingUrl","params","progressIndicator","eventList","progressIcon","style","display","es","EventSource","onResourceStart","console","log","e","onSchemaStart","onSchemaDone","onImagesStart","onImagesDone","onParametersStart","onParametersDone","onOutputStart","onResourceComplete","close","completeMessage","createMod","response","courseid","sectionnum","beforemod","jobid","ok","successMessage","window","location","href","data","activityurl","defaultError","msg","err","error","errorMessage","onError","generateImages","Number","generateimages"],"mappings":"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"}