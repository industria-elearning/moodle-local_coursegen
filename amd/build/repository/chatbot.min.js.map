{"version":3,"file":"chatbot.min.js","sources":["../../src/repository/chatbot.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module chatbot\n *\n * @module     local_datacurso/repository/chatbot\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ajax from \"core/ajax\";\n\n/**\n * Create course context for ask question to chatbot based in that information.\n *\n * @param {number} courseId - The ID of the course to create context for\n * @return {Promise<Object>} response\n */\nexport async function createCourseContext(courseId) {\n    return ajax.call([\n        {\n            methodname: \"local_datacurso_create_course_context\",\n            args: { courseid: courseId },\n        },\n    ])[0];\n}\n\n/**\n * Create module for ask question to chatbot based in that information.\n *\n * @param {{\n *     courseid: number,\n *     sectionnum: number,\n *     beforemod: number,\n *     prompt: string,\n * }} payload - The payload to create module\n * - courseid: The ID of the course to create module for\n * - sectionnum: The number of the section to create module for\n * - beforemod: The ID of the module before which the new module will be created\n * - prompt: The message to create\n * @return {Promise<Object>} response\n */\nexport async function createMod({courseid, sectionnum, beforemod, prompt}) {\n    const args = {\n        courseid: Number(courseid),\n        sectionnum: Number(sectionnum),\n        beforemod: beforemod ? Number(beforemod) : null,\n        prompt,\n    };\n    return ajax.call([\n        {\n            methodname: \"local_datacurso_create_mod\",\n            args,\n        },\n    ])[0];\n}\n\n"],"names":["courseId","ajax","call","methodname","args","courseid","sectionnum","beforemod","prompt","Number"],"mappings":";;;;;;;yGA8B0CA,iBAC/BC,cAAKC,KAAK,CACb,CACIC,WAAY,wCACZC,KAAM,CAAEC,SAAUL,aAEvB,gDAkByBK,SAACA,SAADC,WAAWA,WAAXC,UAAuBA,UAAvBC,OAAkCA,mBACxDJ,KAAO,CACTC,SAAUI,OAAOJ,UACjBC,WAAYG,OAAOH,YACnBC,UAAWA,UAAYE,OAAOF,WAAa,KAC3CC,OAAAA,eAEGP,cAAKC,KAAK,CACb,CACIC,WAAY,6BACZC,KAAAA,QAEL"}