{"version":3,"file":"add_course_ai_button.min.js","sources":["../src/add_course_ai_button.js"],"sourcesContent":["/* eslint-disable */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add AI button to course creation/edit form\n *\n * @module     aiplacement_coursegen/add_course_ai_button\n * @copyright  2025 Wilber Narvaez <https://datacurso.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from \"core/templates\";\n\n/**\n * Initialize the AI button functionality\n */\nexport const init = () => {\n  addAIButton();\n};\n\n/**\n * Add the AI button before the submit button\n */\nconst addAIButton = async () => {\n  // Find the submit form element\n  const submitElement = document.querySelector(\".mb-3.fitem.form-submit\");\n\n  if (!submitElement) {\n    // If not found, try alternative selectors\n    const alternativeSubmit =\n      document.querySelector('div[data-fieldtype=\"submit\"]') ||\n      document.querySelector('input[name=\"saveandreturn\"]')?.closest(\".fitem\");\n\n    if (alternativeSubmit) {\n      await insertAIButton(alternativeSubmit);\n    }\n    return;\n  }\n\n  await insertAIButton(submitElement);\n  const button = document.querySelector(\n    '[data-action=\"aiplacement_coursegen/add_ai_course\"]'\n  );\n  button.addEventListener(\"click\", handleAIButtonClick);\n};\n\n/**\n * Handle the AI button click event\n */\nconst handleAIButtonClick = async (e) => {\n  e.preventDefault();\n\n  const form = document.querySelector('form[action*=\"course/edit.php\"]');\n  document.querySelector('input[name=\"aiplacement_coursegen_create_ai_course\"]').value = 1;\n  document.querySelector('input[name=\"saveanddisplay\"]').click();\n};\n\n/**\n * Insert the AI button before the target element\n * @param {Element} targetElement - The element before which to insert the button\n */\nconst insertAIButton = async (targetElement) => {\n  // Check if button already exists to avoid duplicates\n  if (document.querySelector('[data-action=\"aiplacement_coursegen/add_ai_course\"]')) {\n    return;\n  }\n\n  // Render the template (no context needed as template is self-contained)\n  const { html } = await Templates.renderForPromise(\n    \"aiplacement_coursegen/add_ai_course_button\",\n    {}\n  );\n  const buttonContainer = document.createElement(\"div\");\n  buttonContainer.innerHTML = html;\n\n  // Insert before the submit element\n  targetElement.parentNode.insertBefore(buttonContainer, targetElement);\n};\n"],"names":["addAIButton","async","submitElement","document","querySelector","alternativeSubmit","_document$querySelect","closest","insertAIButton","addEventListener","handleAIButtonClick","e","preventDefault","value","click","html","Templates","renderForPromise","buttonContainer","createElement","innerHTML","targetElement","parentNode","insertBefore"],"mappings":";;;;;;;8JA6BoB,KAClBA,qBAMIA,YAAcC,gBAEZC,cAAgBC,SAASC,cAAc,+BAExCF,cAAe,iCAEZG,kBACJF,SAASC,cAAc,gEACvBD,SAASC,cAAc,uEAAvBE,sBAAuDC,QAAQ,uBAE7DF,yBACIG,eAAeH,0BAKnBG,eAAeN,eACNC,SAASC,cACtB,uDAEKK,iBAAiB,QAASC,sBAM7BA,oBAAsBT,MAAAA,IAC1BU,EAAEC,iBAEWT,SAASC,cAAc,mCACpCD,SAASC,cAAc,wDAAwDS,MAAQ,EACvFV,SAASC,cAAc,gCAAgCU,SAOnDN,eAAiBP,MAAAA,mBAEjBE,SAASC,cAAc,oEAKrBW,KAAEA,YAAeC,mBAAUC,iBAC/B,6CACA,IAEIC,gBAAkBf,SAASgB,cAAc,OAC/CD,gBAAgBE,UAAYL,KAG5BM,cAAcC,WAAWC,aAAaL,gBAAiBG"}