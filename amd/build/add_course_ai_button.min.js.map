{"version":3,"file":"add_course_ai_button.min.js","sources":["../src/add_course_ai_button.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Add AI button to course creation/edit form\n *\n * @module     local_datacurso/add_course_ai_button\n * @copyright  2025 Buendata <soluciones@buendata.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\n\n/**\n * Initialize the AI button functionality\n */\nexport const init = () => {\n    addAIButton();\n};\n\n/**\n * Add the AI button before the submit button\n */\nconst addAIButton = async() => {\n    // Find the submit form element\n    const submitElement = document.querySelector('.mb-3.fitem.form-submit');\n\n    if (!submitElement) {\n        // If not found, try alternative selectors\n        const alternativeSubmit = document.querySelector('div[data-fieldtype=\"submit\"]') ||\n                                 document.querySelector('input[name=\"saveandreturn\"]')?.closest('.fitem');\n\n        if (alternativeSubmit) {\n            await insertAIButton(alternativeSubmit);\n        }\n        return;\n    }\n\n    await insertAIButton(submitElement);\n    const button = document.querySelector('[data-action=\"local_datacurso/add_ai_course\"]');\n    button.addEventListener('click', handleAIButtonClick);\n};\n\n/**\n * Handle the AI button click event\n */\nconst handleAIButtonClick = () => {\n    // TODO: Implement AI button click event\n};\n\n/**\n * Insert the AI button before the target element\n * @param {Element} targetElement - The element before which to insert the button\n */\nconst insertAIButton = async(targetElement) => {\n    // Check if button already exists to avoid duplicates\n    if (document.querySelector('[data-action=\"local_datacurso/add_ai_course\"]')) {\n        return;\n    }\n\n    // Render the template (no context needed as template is self-contained)\n    const {html} = await Templates.renderForPromise('local_datacurso/add_ai_course_button', {});\n    const buttonContainer = document.createElement('div');\n    buttonContainer.innerHTML = html;\n\n    // Insert before the submit element\n    targetElement.parentNode.insertBefore(buttonContainer, targetElement);\n};\n"],"names":["addAIButton","async","submitElement","document","querySelector","alternativeSubmit","_document$querySelect","closest","insertAIButton","addEventListener","handleAIButtonClick","html","Templates","renderForPromise","buttonContainer","createElement","innerHTML","targetElement","parentNode","insertBefore"],"mappings":";;;;;;;8JA4BoB,KAChBA,qBAMEA,YAAcC,gBAEVC,cAAgBC,SAASC,cAAc,+BAExCF,cAAe,iCAEVG,kBAAoBF,SAASC,cAAc,gEACxBD,SAASC,cAAc,uEAAvBE,sBAAuDC,QAAQ,uBAEpFF,yBACMG,eAAeH,0BAKvBG,eAAeN,eACNC,SAASC,cAAc,iDAC/BK,iBAAiB,QAASC,sBAM/BA,oBAAsB,OAQtBF,eAAiBP,MAAAA,mBAEfE,SAASC,cAAc,8DAKrBO,KAACA,YAAcC,mBAAUC,iBAAiB,uCAAwC,IAClFC,gBAAkBX,SAASY,cAAc,OAC/CD,gBAAgBE,UAAYL,KAG5BM,cAAcC,WAAWC,aAAaL,gBAAiBG"}