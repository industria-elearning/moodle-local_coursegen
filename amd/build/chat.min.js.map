{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Floating chat for AI assistant in course contexts (con SSE)\n *\n * @module     local_datacurso/chat\n * @copyright  2025 Datacurso\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/notification'], function (Ajax, notification) {\n    'use strict';\n\n    /**\n     * Clase principal del chat flotante\n     */\n    class DatacursoChat {\n        constructor() {\n            this.chatWidget = null;\n            this.isMinimized = true;\n            this.userRole = 'Estudiante';\n            this.courseId = null;\n            this.isInCourseContext = false;\n\n            // Estado SSE\n            this.currentEventSource = null;\n            this.currentAIMessageEl = null;\n            this.streaming = false;\n\n            this.init();\n        }\n\n        /**\n         * Inicializa el chat\n         */\n        init() {\n            try {\n                if (!this.checkCourseContext()) {\n                    return;\n                }\n                this.detectUserRole();\n                this.createChatWidget();\n                this.addEventListeners();\n            } catch (error) {\n                window.console && window.console.error('Error initializing chat:', error);\n            }\n        }\n\n        /**\n         * Verifica si estamos en contexto de curso\n         */\n        checkCourseContext() {\n            try {\n                if (window.datacurso_chat_config && window.datacurso_chat_config.courseid > 0) {\n                    this.courseId = parseInt(window.datacurso_chat_config.courseid, 10);\n                    this.isInCourseContext = true;\n                    return true;\n                }\n\n                const url = window.location.href;\n                const courseMatch = url.match(/course\\/view\\.php\\?id=(\\d+)/);\n                const modMatch = url.match(/mod\\/\\w+\\/view\\.php.*course=(\\d+)/);\n                const activityMatch = url.match(/course\\/modedit\\.php.*course=(\\d+)/);\n\n                if (courseMatch) {\n                    this.courseId = parseInt(courseMatch[1], 10);\n                    this.isInCourseContext = true;\n                    return true;\n                } else if (modMatch) {\n                    this.courseId = parseInt(modMatch[1], 10);\n                    this.isInCourseContext = true;\n                    return true;\n                } else if (activityMatch) {\n                    this.courseId = parseInt(activityMatch[1], 10);\n                    this.isInCourseContext = true;\n                    return true;\n                }\n\n                const courseContent = document.querySelector('#page-course-view') ||\n                    document.querySelector('.course-content') ||\n                    document.querySelector('[data-region=\"course-content\"]') ||\n                    document.querySelector('body.path-course') ||\n                    document.querySelector('body.path-mod');\n\n                if (courseContent) {\n                    const courseIdElement = document.querySelector('[data-courseid]');\n                    if (courseIdElement) {\n                        const courseIdValue = courseIdElement.getAttribute('data-courseid');\n                        if (courseIdValue && !isNaN(courseIdValue)) {\n                            this.courseId = parseInt(courseIdValue, 10);\n                        }\n                    }\n                    this.isInCourseContext = true;\n                    return true;\n                }\n\n                return false;\n            } catch (error) {\n                window.console && window.console.warn('Error checking course context:', error);\n                return false;\n            }\n        }\n\n        /**\n         * Detecta el rol del usuario en el contexto del curso\n         */\n        detectUserRole() {\n            try {\n                if (window.datacurso_chat_config && window.datacurso_chat_config.userrole) {\n                    const role = window.datacurso_chat_config.userrole;\n                    if (typeof role === 'string' && role.trim()) {\n                        this.userRole = role.trim();\n                        return;\n                    }\n                }\n\n                const teacherElements = [\n                    '.editing',\n                    '[data-role=\"teacher\"]',\n                    '.teacher-view',\n                    '.course-editing',\n                    'body.editing'\n                ];\n\n                for (const selector of teacherElements) {\n                    try {\n                        if (document.querySelector(selector)) {\n                            this.userRole = 'Profesor';\n                            return;\n                        }\n                    } catch (e) {\n                        \n                    }\n                }\n\n                const userMenu = document.querySelector('.usermenu') || document.querySelector('.user-menu');\n                if (userMenu && userMenu.textContent && userMenu.textContent.toLowerCase().includes('profesor')) {\n                    this.userRole = 'Profesor';\n                    return;\n                }\n\n                if (document.querySelector('a[href*=\"edit=on\"]') ||\n                    document.querySelector('.turn-editing-on') ||\n                    document.querySelector('.editing-on')) {\n                    this.userRole = 'Profesor';\n                    return;\n                }\n\n                this.userRole = 'Estudiante';\n            } catch (error) {\n                window.console && window.console.warn('Error detecting user role:', error);\n                this.userRole = 'Estudiante';\n            }\n        }\n\n        /**\n         * Crea el widget del chat\n         */\n        createChatWidget() {\n            const chatHTML = `\n                <div class=\"datacurso-chat-widget\" id=\"datacursoChat\">\n                    <div class=\"datacurso-chat-header\" id=\"chatHeader\">\n                        <div class=\"datacurso-chat-header-content\">\n                            <h3>Asistente IA</h3>\n                            <span class=\"datacurso-chat-role\" id=\"userRole\">${this.userRole}</span>\n                        </div>\n                        <button class=\"datacurso-chat-toggle\" id=\"toggleBtn\" aria-label=\"Minimizar/Maximizar chat\">-</button>\n                    </div>\n\n                    <div class=\"datacurso-chat-body\" id=\"chatBody\">\n                        <div class=\"datacurso-chat-messages\" id=\"chatMessages\">\n                            <div class=\"datacurso-chat-message ai\">\n                                ¡Hola! Soy tu asistente de IA. ¿En qué puedo ayudarte hoy?\n                            </div>\n                        </div>\n\n                        <div class=\"datacurso-chat-input-container\">\n                            <div class=\"datacurso-chat-input-wrapper\">\n                                <textarea\n                                    class=\"datacurso-chat-input\"\n                                    id=\"chatInput\"\n                                    placeholder=\"Escribe tu mensaje...\"\n                                    rows=\"1\"\n                                    aria-label=\"Mensaje para el asistente IA\"></textarea>\n                                <button id=\"sendBtn\" class=\"datacurso-chat-send\" aria-label=\"Enviar mensaje\">\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                                        <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n                                        <polygon points=\"22,2 15,22 11,13 2,9\"></polygon>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"datacurso-chat-footer\">\n                        Powered by Datacurso IA\n                    </div>\n                </div>\n            `;\n\n            const chatContainer = document.createElement('div');\n            chatContainer.innerHTML = chatHTML;\n            this.chatWidget = chatContainer.firstElementChild;\n\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n            } else {\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n            }\n\n            document.body.appendChild(this.chatWidget);\n\n            requestAnimationFrame(() => {\n                setTimeout(() => {\n                    if (this.chatWidget) {\n                        this.chatWidget.classList.add('show');\n                    }\n                }, 100);\n            });\n        }\n\n        /**\n         * Agrega event listeners\n         */\n        addEventListeners() {\n            const header = this.chatWidget.querySelector('#chatHeader');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n            const input = this.chatWidget.querySelector('#chatInput');\n\n            header.addEventListener('click', () => this.toggleChat());\n            sendBtn.addEventListener('click', () => this.sendMessage());\n\n            input.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    this.sendMessage();\n                }\n            });\n\n            input.addEventListener('input', () => {\n                input.style.height = 'auto';\n                input.style.height = Math.min(input.scrollHeight, 100) + 'px';\n            });\n\n            this.chatWidget.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n        }\n\n        /**\n         * Alterna entre minimizado y maximizado\n         */\n        toggleChat() {\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.remove('minimized');\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n                this.isMinimized = false;\n            } else {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n                this.isMinimized = true;\n            }\n        }\n\n        /**\n         * Envía un mensaje y abre SSE\n         */\n        sendMessage() {\n            const input = this.chatWidget.querySelector('#chatInput');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n\n            if (!input || !sendBtn) {\n                window.console && window.console.error('Chat input or send button not found');\n                return;\n            }\n\n            const messageText = input.value.trim();\n            if (!messageText || this.streaming) {\n                return;\n            }\n\n            if (messageText.length > 4000) {\n                this.addMessage('[Error] El mensaje es demasiado largo. Máximo 4000 caracteres.', 'ai');\n                return;\n            }\n\n            try {\n                this._closeCurrentStream();\n                sendBtn.disabled = true;\n                this.addMessage(messageText, 'user');\n                input.value = '';\n                input.style.height = 'auto';\n                this.scrollToBottom();\n                this.showTypingIndicator();\n\n                const courseId = window.courseid || this.courseId || 1;\n\n                if (!courseId || isNaN(courseId)) {\n                    throw new Error('Course ID inválido');\n                }\n\n                const requests = Ajax.call([{\n                    methodname: \"local_datacurso_create_chat_message\",\n                    args: {\n                        courseid: parseInt(courseId, 10),\n                        lang: this._sanitizeString(\"es\"),\n                        message: this._sanitizeString(messageText.substring(0, 4000)),\n                    },\n                }]);\n\n                requests[0].then((data) => {\n                    if (!data) {\n                        throw new Error('Respuesta vacía del servidor');\n                    }\n                    const streamUrl = data.stream_url || data.streamurl;\n                    const sessionId = data.session_id || data.sessionId;\n                    if (!streamUrl) {\n                        throw new Error('URL de stream ausente en la respuesta');\n                    }\n                    this._startSSE(streamUrl, sessionId, sendBtn);\n                }).catch((err) => {\n                    this.hideTypingIndicator();\n                    this.addMessage('[Error] No se pudo iniciar el stream: ' + (err.message || 'Error desconocido'), 'ai');\n                    sendBtn.disabled = false;\n                    window.console && window.console.error('Chat error:', err);\n                    if (notification && notification.exception) {\n                        notification.exception(err);\n                    }\n                });\n            } catch (error) {\n                this.hideTypingIndicator();\n                this.addMessage('[Error] Error interno: ' + error.message, 'ai');\n                sendBtn.disabled = false;\n                window.console && window.console.error('Chat send error:', error);\n            }\n        }\n\n        _sanitizeString(str) {\n            if (typeof str !== 'string') {\n                return '';\n            }\n            return str.replace(/[<>]/g, '');\n        }\n\n        /**\n         * Abre EventSource, consume tokens y renderiza un mensaje AI en vivo\n         * @param {string} streamUrl\n         * @param {string} sessionId\n         * @param {HTMLElement} sendBtn\n         */\n        _startSSE(streamUrl, sessionId, sendBtn) {\n            if (!streamUrl) {\n                this._finalizeStream(sendBtn);\n                this.addMessage('[Error] URL de stream inválida', 'ai');\n                return;\n            }\n\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            if (!messages) {\n                this._finalizeStream(sendBtn);\n                return;\n            }\n\n            try {\n                const aiEl = document.createElement('div');\n                aiEl.className = 'datacurso-chat-message ai';\n                aiEl.textContent = '';\n                messages.appendChild(aiEl);\n                this.currentAIMessageEl = aiEl;\n\n                const es = new EventSource(streamUrl);\n                this.currentEventSource = es;\n                this.streaming = true;\n                let firstToken = true;\n                let connectionTimeout = null;\n\n                connectionTimeout = setTimeout(() => {\n                    if (this.streaming && firstToken) {\n                        this._appendToAIMessage('[Timeout: El servidor tardó demasiado en responder]');\n                        this._finalizeStream(sendBtn);\n                    }\n                }, 30000);\n\n                es.addEventListener('open', () => {\n                    window.console && window.console.log('SSE connection opened');\n                });\n\n                es.addEventListener('meta', () => {\n                });\n\n                es.addEventListener('token', (ev) => {\n                    try {\n                        if (connectionTimeout) {\n                            clearTimeout(connectionTimeout);\n                            connectionTimeout = null;\n                        }\n                        const payload = JSON.parse(ev.data);\n                        const t = payload.t || '';\n                        if (firstToken) {\n                            firstToken = false;\n                            this.hideTypingIndicator();\n                        }\n                        this._appendToAIMessage(t);\n                    } catch (e) {\n                        window.console && window.console.warn('Invalid token data:', ev.data);\n                    }\n                });\n\n                es.addEventListener('message_completed', () => {\n                    if (connectionTimeout) {\n                        clearTimeout(connectionTimeout);\n                    }\n                    this._finalizeStream(sendBtn);\n                });\n\n                es.addEventListener('error', (event) => {\n                    if (connectionTimeout) {\n                        clearTimeout(connectionTimeout);\n                    }\n                    window.console && window.console.error('SSE error:', event);\n                    if (this.currentAIMessageEl && this.currentAIMessageEl.textContent.trim() === '') {\n                        this._appendToAIMessage('[Error de conexión con el servidor]');\n                    } else {\n                        this._appendToAIMessage('\\n[Conexión interrumpida]');\n                    }\n                    this._finalizeStream(sendBtn);\n                });\n\n                this.scrollToBottom();\n            } catch (error) {\n                window.console && window.console.error('Error starting SSE:', error);\n                this.addMessage('[Error] No se pudo establecer conexión SSE', 'ai');\n                this._finalizeStream(sendBtn);\n            }\n        }\n\n        /**\n         * Añade texto al mensaje AI actual\n         * @param {string} text\n         */\n        _appendToAIMessage(text) {\n            if (!this.currentAIMessageEl || typeof text !== 'string') {\n                return;\n            }\n            \n            const currentText = this.currentAIMessageEl.textContent || '';\n            const maxLength = 10000;\n            \n            if (currentText.length + text.length > maxLength) {\n                const remainingSpace = maxLength - currentText.length;\n                if (remainingSpace > 0) {\n                    this.currentAIMessageEl.textContent += text.substring(0, remainingSpace) + '...';\n                }\n                return;\n            }\n            \n            this.currentAIMessageEl.textContent += text;\n            this.scrollToBottom();\n        }\n\n        /**\n         * Cierra y limpia el stream actual\n         */\n        _closeCurrentStream() {\n            if (this.currentEventSource) {\n                try {\n                    this.currentEventSource.close();\n                } catch (e) {\n                    window.console && window.console.warn('Error closing EventSource:', e);\n                }\n            }\n            this.currentEventSource = null;\n            this.streaming = false;\n            this.currentAIMessageEl = null;\n            this.hideTypingIndicator();\n        }\n\n        /**\n         * Finaliza flujo SSE: cierra ES y habilita UI\n         * @param {HTMLElement} sendBtn\n         */\n        _finalizeStream(sendBtn) {\n            this._closeCurrentStream();\n            if (sendBtn) sendBtn.disabled = false;\n        }\n\n        /**\n         * Agrega un mensaje al chat\n         */\n        addMessage(text, type) {\n            if (!text || typeof text !== 'string') {\n                return;\n            }\n\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            if (!messages) {\n                return;\n            }\n\n            const messageElement = document.createElement('div');\n            messageElement.className = `datacurso-chat-message ${type}`;\n            \n            const sanitizedText = text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            messageElement.textContent = sanitizedText.substring(0, 10000);\n            \n            messages.appendChild(messageElement);\n\n            const maxMessages = 100;\n            const messageElements = messages.querySelectorAll('.datacurso-chat-message:not(.typing-indicator)');\n            if (messageElements.length > maxMessages) {\n                for (let i = 0; i < messageElements.length - maxMessages; i++) {\n                    messageElements[i].remove();\n                }\n            }\n\n            this.scrollToBottom();\n        }\n\n        /**\n         * Muestra indicador de escritura\n         */\n        showTypingIndicator() {\n            try {\n                const messages = this.chatWidget && this.chatWidget.querySelector('#chatMessages');\n                if (!messages) {\n                    return;\n                }\n                \n                const existingIndicator = messages.querySelector('#typingIndicator');\n                if (existingIndicator) {\n                    return;\n                }\n                \n                const typingElement = document.createElement('div');\n                typingElement.className = 'datacurso-chat-message ai typing-indicator';\n                typingElement.id = 'typingIndicator';\n                typingElement.innerHTML = '<span></span><span></span><span></span>';\n                messages.appendChild(typingElement);\n                this.scrollToBottom();\n            } catch (error) {\n                window.console && window.console.warn('Error showing typing indicator:', error);\n            }\n        }\n\n        /**\n         * Oculta indicador de escritura\n         */\n        hideTypingIndicator() {\n            try {\n                const typingIndicator = this.chatWidget && this.chatWidget.querySelector('#typingIndicator');\n                if (typingIndicator) {\n                    typingIndicator.remove();\n                }\n            } catch (error) {\n                window.console && window.console.warn('Error hiding typing indicator:', error);\n            }\n        }\n\n        /**\n         * Hace scroll al final de los mensajes\n         */\n        scrollToBottom() {\n            try {\n                const messages = this.chatWidget && this.chatWidget.querySelector('#chatMessages');\n                if (messages) {\n                    requestAnimationFrame(() => {\n                        messages.scrollTop = messages.scrollHeight;\n                    });\n                }\n            } catch (error) {\n                window.console && window.console.warn('Error scrolling to bottom:', error);\n            }\n        }\n\n        /**\n         * Destruye el chat widget\n         */\n        destroy() {\n            this._closeCurrentStream();\n            if (this.chatWidget) {\n                this.chatWidget.remove();\n                this.chatWidget = null;\n            }\n        }\n    }\n\n    // Variable global para la instancia del chat\n    let datacursoChatInstance = null;\n\n    return {\n        /**\n         * Inicializa el chat flotante\n         */\n        init: function () {\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n            }\n            try {\n                datacursoChatInstance = new DatacursoChat();\n            } catch (error) {\n                notification.exception(error);\n            }\n        },\n\n        /**\n         * Destruye el chat flotante\n         */\n        destroy: function () {\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n                datacursoChatInstance = null;\n            }\n        }\n    };\n});\n"],"names":["define","Ajax","notification","DatacursoChat","constructor","chatWidget","isMinimized","userRole","courseId","isInCourseContext","currentEventSource","currentAIMessageEl","streaming","init","this","checkCourseContext","detectUserRole","createChatWidget","addEventListeners","error","window","console","datacurso_chat_config","courseid","parseInt","url","location","href","courseMatch","match","modMatch","activityMatch","document","querySelector","courseIdElement","courseIdValue","getAttribute","isNaN","warn","userrole","role","trim","teacherElements","selector","e","userMenu","textContent","toLowerCase","includes","chatHTML","chatContainer","createElement","innerHTML","firstElementChild","body","toggleBtn","classList","add","style","display","setAttribute","appendChild","requestAnimationFrame","setTimeout","header","sendBtn","input","addEventListener","toggleChat","sendMessage","key","shiftKey","preventDefault","height","Math","min","scrollHeight","stopPropagation","remove","messageText","value","length","addMessage","_closeCurrentStream","disabled","scrollToBottom","showTypingIndicator","Error","call","methodname","args","lang","_sanitizeString","message","substring","then","data","streamUrl","stream_url","streamurl","sessionId","session_id","_startSSE","catch","err","hideTypingIndicator","exception","str","replace","_finalizeStream","messages","aiEl","className","es","EventSource","firstToken","connectionTimeout","_appendToAIMessage","log","ev","clearTimeout","t","JSON","parse","event","text","currentText","remainingSpace","close","type","messageElement","sanitizedText","messageElements","querySelectorAll","i","typingElement","id","typingIndicator","scrollTop","destroy","datacursoChatInstance"],"mappings":"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"}