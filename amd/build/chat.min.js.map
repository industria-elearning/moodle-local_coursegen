{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Floating chat for AI assistant in course contexts (con SSE)\n *\n * @module     local_datacurso/chat\n * @copyright  2025 Datacurso\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/notification'], function (Ajax, notification) {\n    'use strict';\n\n    /**\n     * Clase principal del chat flotante\n     */\n    class DatacursoChat {\n        constructor() {\n            this.chatWidget = null;\n            this.isMinimized = true;\n            this.userRole = 'Estudiante';\n            this.courseId = null;\n            this.isInCourseContext = false;\n\n            // Estado SSE\n            this.currentEventSource = null;\n            this.currentAIMessageEl = null;\n            this.streaming = false;\n\n            this.init();\n        }\n\n        /**\n         * Inicializa el chat\n         */\n        init() {\n            if (!this.checkCourseContext()) {\n                return;\n            }\n            this.detectUserRole();\n            this.createChatWidget();\n            this.addEventListeners();\n        }\n\n        /**\n         * Verifica si estamos en contexto de curso\n         */\n        checkCourseContext() {\n            if (window.datacurso_chat_config && window.datacurso_chat_config.courseid > 0) {\n                this.courseId = window.datacurso_chat_config.courseid;\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            const url = window.location.href;\n            const courseMatch = url.match(/course\\/view\\.php\\?id=(\\d+)/);\n            const modMatch = url.match(/mod\\/\\w+\\/view\\.php.*course=(\\d+)/);\n            const activityMatch = url.match(/course\\/modedit\\.php.*course=(\\d+)/);\n\n            if (courseMatch) {\n                this.courseId = courseMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            } else if (modMatch) {\n                this.courseId = modMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            } else if (activityMatch) {\n                this.courseId = activityMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            const courseContent = document.querySelector('#page-course-view') ||\n                document.querySelector('.course-content') ||\n                document.querySelector('[data-region=\"course-content\"]') ||\n                document.querySelector('body.path-course') ||\n                document.querySelector('body.path-mod');\n\n            if (courseContent) {\n                const courseIdElement = document.querySelector('[data-courseid]');\n                if (courseIdElement) {\n                    this.courseId = courseIdElement.getAttribute('data-courseid');\n                }\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            return false;\n        }\n\n        /**\n         * Detecta el rol del usuario en el contexto del curso\n         */\n        detectUserRole() {\n            if (window.datacurso_chat_config && window.datacurso_chat_config.userrole) {\n                this.userRole = window.datacurso_chat_config.userrole;\n                return;\n            }\n\n            const teacherElements = [\n                '.editing',\n                '[data-role=\"teacher\"]',\n                '.teacher-view',\n                '.course-editing',\n                'body.editing'\n            ];\n\n            for (const selector of teacherElements) {\n                if (document.querySelector(selector)) {\n                    this.userRole = 'Profesor';\n                    return;\n                }\n            }\n\n            const userMenu = document.querySelector('.usermenu') || document.querySelector('.user-menu');\n            if (userMenu && userMenu.textContent.toLowerCase().includes('profesor')) {\n                this.userRole = 'Profesor';\n                return;\n            }\n\n            if (document.querySelector('a[href*=\"edit=on\"]') ||\n                document.querySelector('.turn-editing-on') ||\n                document.querySelector('.editing-on')) {\n                this.userRole = 'Profesor';\n                return;\n            }\n\n            this.userRole = 'Estudiante';\n        }\n\n        /**\n         * Crea el widget del chat\n         */\n        createChatWidget() {\n            const chatHTML = `\n                <div class=\"datacurso-chat-widget\" id=\"datacursoChat\">\n                    <div class=\"datacurso-chat-header\" id=\"chatHeader\">\n                        <div class=\"datacurso-chat-header-content\">\n                            <h3>Asistente IA</h3>\n                            <span class=\"datacurso-chat-role\" id=\"userRole\">${this.userRole}</span>\n                        </div>\n                        <button class=\"datacurso-chat-toggle\" id=\"toggleBtn\" aria-label=\"Minimizar/Maximizar chat\">-</button>\n                    </div>\n\n                    <div class=\"datacurso-chat-body\" id=\"chatBody\">\n                        <div class=\"datacurso-chat-messages\" id=\"chatMessages\">\n                            <div class=\"datacurso-chat-message ai\">\n                                ¡Hola! Soy tu asistente de IA. ¿En qué puedo ayudarte hoy?\n                            </div>\n                        </div>\n\n                        <div class=\"datacurso-chat-input-container\">\n                            <div class=\"datacurso-chat-input-wrapper\">\n                                <textarea\n                                    class=\"datacurso-chat-input\"\n                                    id=\"chatInput\"\n                                    placeholder=\"Escribe tu mensaje...\"\n                                    rows=\"1\"\n                                    aria-label=\"Mensaje para el asistente IA\"></textarea>\n                                <button id=\"sendBtn\" class=\"datacurso-chat-send\" aria-label=\"Enviar mensaje\">\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                                        <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n                                        <polygon points=\"22,2 15,22 11,13 2,9\"></polygon>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"datacurso-chat-footer\">\n                        Powered by Datacurso IA\n                    </div>\n                </div>\n            `;\n\n            const chatContainer = document.createElement('div');\n            chatContainer.innerHTML = chatHTML;\n            this.chatWidget = chatContainer.firstElementChild;\n\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n            } else {\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n            }\n\n            document.body.appendChild(this.chatWidget);\n\n            setTimeout(() => {\n                this.chatWidget.classList.add('show');\n            }, 100);\n        }\n\n        /**\n         * Agrega event listeners\n         */\n        addEventListeners() {\n            const header = this.chatWidget.querySelector('#chatHeader');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n            const input = this.chatWidget.querySelector('#chatInput');\n\n            header.addEventListener('click', () => this.toggleChat());\n            sendBtn.addEventListener('click', () => this.sendMessage());\n\n            input.addEventListener('keypress', (e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    this.sendMessage();\n                }\n            });\n\n            input.addEventListener('input', () => {\n                input.style.height = 'auto';\n                input.style.height = Math.min(input.scrollHeight, 100) + 'px';\n            });\n\n            this.chatWidget.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n        }\n\n        /**\n         * Alterna entre minimizado y maximizado\n         */\n        toggleChat() {\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.remove('minimized');\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n                this.isMinimized = false;\n            } else {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n                this.isMinimized = true;\n            }\n        }\n\n        /**\n         * Envía un mensaje y abre SSE\n         */\n        sendMessage() {\n            const input = this.chatWidget.querySelector('#chatInput');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n\n            const messageText = input.value.trim();\n            if (!messageText || this.streaming) {\n                return;\n            }\n\n            // Cierra stream previo si existiera\n            this._closeCurrentStream();\n\n            // Deshabilitar botón de envío hasta finalizar el stream\n            sendBtn.disabled = true;\n\n            // Mensaje del usuario\n            this.addMessage(messageText, 'user');\n\n            // Limpiar input\n            input.value = '';\n            input.style.height = 'auto';\n            this.scrollToBottom();\n            this.showTypingIndicator();\n\n            const courseId = window.courseid || this.courseId || 1;\n\n            // Llamada WS Moodle -> devuelve { session_id, stream_url, expires_at }\n            const requests = Ajax.call([{\n                methodname: \"local_datacurso_create_chat_message\",\n                args: {\n                    courseid: Number(courseId),\n                    lang: \"es\",\n                    message: messageText,\n                },\n            }]);\n\n            requests[0].then((data) => {\n                const streamUrl = data.stream_url || data.streamurl;\n                const sessionId = data.session_id || data.sessionId;\n                if (!streamUrl) {\n                    throw new Error('stream_url ausente');\n                }\n                this._startSSE(streamUrl, sessionId, sendBtn);\n            }).catch((err) => {\n                this.hideTypingIndicator();\n                this.addMessage('[Error] No se pudo iniciar el stream.', 'ai');\n                sendBtn.disabled = false;\n                notification.exception(err);\n            });\n        }\n\n        /**\n         * Abre EventSource, consume tokens y renderiza un mensaje AI en vivo\n         * @param {string} streamUrl\n         * @param {string} sessionId\n         * @param {HTMLElement} sendBtn\n         */\n        _startSSE(streamUrl, sessionId, sendBtn) {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n\n            // Contenedor del mensaje de la IA que se irá completando\n            const aiEl = document.createElement('div');\n            aiEl.className = 'datacurso-chat-message ai';\n            aiEl.textContent = ''; // comenzamos vacío\n            messages.appendChild(aiEl);\n            this.currentAIMessageEl = aiEl;\n\n            // Abrir SSE\n            const es = new EventSource(streamUrl);\n            this.currentEventSource = es;\n            this.streaming = true;\n            let firstToken = true;\n\n            es.addEventListener('meta', () => {\n                // opcional: manejar metadatos\n            });\n\n            es.addEventListener('token', (ev) => {\n                try {\n                    const payload = JSON.parse(ev.data);\n                    const t = payload.t || '';\n                    if (firstToken) {\n                        firstToken = false;\n                        this.hideTypingIndicator();\n                    }\n                    this._appendToAIMessage(t);\n                } catch (e) {\n                    // ignora token malformado\n                }\n            });\n\n            es.addEventListener('message_completed', () => {\n                this._finalizeStream(sendBtn);\n            });\n\n            es.onerror = () => {\n                this._appendToAIMessage('\\n[Stream interrumpido]');\n                this._finalizeStream(sendBtn);\n            };\n\n            this.scrollToBottom();\n        }\n\n        /**\n         * Añade texto al mensaje AI actual\n         * @param {string} text\n         */\n        _appendToAIMessage(text) {\n            if (!this.currentAIMessageEl) {\n                return;\n            }\n            this.currentAIMessageEl.textContent += text;\n            this.scrollToBottom();\n        }\n\n        /**\n         * Cierra y limpia el stream actual\n         */\n        _closeCurrentStream() {\n            if (this.currentEventSource) {\n                try { this.currentEventSource.close(); } catch (e) { /* no-op */ }\n            }\n            this.currentEventSource = null;\n            this.streaming = false;\n            this.currentAIMessageEl = null;\n            this.hideTypingIndicator();\n        }\n\n        /**\n         * Finaliza flujo SSE: cierra ES y habilita UI\n         * @param {HTMLElement} sendBtn\n         */\n        _finalizeStream(sendBtn) {\n            this._closeCurrentStream();\n            if (sendBtn) sendBtn.disabled = false;\n        }\n\n        /**\n         * Agrega un mensaje al chat\n         */\n        addMessage(text, type) {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            const messageElement = document.createElement('div');\n            messageElement.className = `datacurso-chat-message ${type}`;\n            messageElement.textContent = text;\n            messages.appendChild(messageElement);\n            this.scrollToBottom();\n        }\n\n        /**\n         * Muestra indicador de escritura\n         */\n        showTypingIndicator() {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            const typingElement = document.createElement('div');\n            typingElement.className = 'datacurso-chat-message ai typing-indicator';\n            typingElement.id = 'typingIndicator';\n            typingElement.innerHTML = '<span></span><span></span><span></span>';\n            messages.appendChild(typingElement);\n            this.scrollToBottom();\n        }\n\n        /**\n         * Oculta indicador de escritura\n         */\n        hideTypingIndicator() {\n            const typingIndicator = this.chatWidget.querySelector('#typingIndicator');\n            if (typingIndicator) {\n                typingIndicator.remove();\n            }\n        }\n\n        /**\n         * Hace scroll al final de los mensajes\n         */\n        scrollToBottom() {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            messages.scrollTop = messages.scrollHeight;\n        }\n\n        /**\n         * Destruye el chat widget\n         */\n        destroy() {\n            this._closeCurrentStream();\n            if (this.chatWidget) {\n                this.chatWidget.remove();\n                this.chatWidget = null;\n            }\n        }\n    }\n\n    // Variable global para la instancia del chat\n    let datacursoChatInstance = null;\n\n    return {\n        /**\n         * Inicializa el chat flotante\n         */\n        init: function () {\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n            }\n            try {\n                datacursoChatInstance = new DatacursoChat();\n            } catch (error) {\n                notification.exception(error);\n            }\n        },\n\n        /**\n         * Destruye el chat flotante\n         */\n        destroy: function () {\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n                datacursoChatInstance = null;\n            }\n        }\n    };\n});\n"],"names":["define","Ajax","notification","DatacursoChat","constructor","chatWidget","isMinimized","userRole","courseId","isInCourseContext","currentEventSource","currentAIMessageEl","streaming","init","this","checkCourseContext","detectUserRole","createChatWidget","addEventListeners","window","datacurso_chat_config","courseid","url","location","href","courseMatch","match","modMatch","activityMatch","document","querySelector","courseIdElement","getAttribute","userrole","teacherElements","selector","userMenu","textContent","toLowerCase","includes","chatHTML","chatContainer","createElement","innerHTML","firstElementChild","body","toggleBtn","classList","add","style","display","setAttribute","appendChild","setTimeout","header","sendBtn","input","addEventListener","toggleChat","sendMessage","e","key","shiftKey","preventDefault","height","Math","min","scrollHeight","stopPropagation","remove","messageText","value","trim","_closeCurrentStream","disabled","addMessage","scrollToBottom","showTypingIndicator","call","methodname","args","Number","lang","message","then","data","streamUrl","stream_url","streamurl","sessionId","session_id","Error","_startSSE","catch","err","hideTypingIndicator","exception","messages","aiEl","className","es","EventSource","firstToken","ev","t","JSON","parse","_appendToAIMessage","_finalizeStream","onerror","text","close","type","messageElement","typingElement","id","typingIndicator","scrollTop","destroy","datacursoChatInstance","error"],"mappings":"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"}