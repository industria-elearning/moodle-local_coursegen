{"version":3,"file":"chat.min.js","sources":["../src/chat.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Floating chat for AI assistant in course contexts\n *\n * @module     local_datacurso/chat\n * @copyright  2025 Datacurso <josue@datacurso.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/notification', 'local_datacurso/repository/chatbot'], function (notification, chatbotRepository) {\n    'use strict';\n\n    /**\n     * Clase principal del chat flotante\n     */\n    class DatacursoChat {\n        constructor() {\n            this.chatWidget = null;\n            this.isMinimized = true;\n            this.userRole = 'Estudiante';\n            this.courseId = null;\n            this.isInCourseContext = false;\n            this.isLoading = false;\n\n            this.init();\n        }\n\n        /**\n         * Inicializa el chat\n         */\n        init() {\n            // Verificar si estamos en contexto de curso\n            if (!this.checkCourseContext()) {\n                return;\n            }\n\n            // Detectar rol del usuario\n            this.detectUserRole();\n\n            // Crear el widget del chat\n            this.createChatWidget();\n\n            // Agregar event listeners\n            this.addEventListeners();\n        }\n\n        /**\n         * Verifica si estamos en contexto de curso\n         */\n        checkCourseContext() {\n            // Primero verificar si PHP ya confirmó que estamos en contexto de curso\n            if (window.datacurso_chat_config && window.datacurso_chat_config.courseid > 0) {\n                this.courseId = window.datacurso_chat_config.courseid;\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            // Verificar URL para contexto de curso\n            const url = window.location.href;\n            const courseMatch = url.match(/course\\/view\\.php\\?id=(\\d+)/);\n            const modMatch = url.match(/mod\\/\\w+\\/view\\.php.*course=(\\d+)/);\n            const activityMatch = url.match(/course\\/modedit\\.php.*course=(\\d+)/);\n\n            if (courseMatch) {\n                this.courseId = courseMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            } else if (modMatch) {\n                this.courseId = modMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            } else if (activityMatch) {\n                this.courseId = activityMatch[1];\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            // Verificar si hay elementos específicos de curso en la página\n            const courseContent = document.querySelector('#page-course-view') ||\n                document.querySelector('.course-content') ||\n                document.querySelector('[data-region=\"course-content\"]') ||\n                document.querySelector('body.path-course') ||\n                document.querySelector('body.path-mod');\n\n            if (courseContent) {\n                // Intentar obtener course ID del DOM\n                const courseIdElement = document.querySelector('[data-courseid]');\n                if (courseIdElement) {\n                    this.courseId = courseIdElement.getAttribute('data-courseid');\n                }\n                this.isInCourseContext = true;\n                return true;\n            }\n\n            return false;\n        }\n\n        /**\n         * Detecta el rol del usuario en el contexto del curso\n         */\n        detectUserRole() {\n            // Primero intentar usar los datos pasados desde PHP\n            if (window.datacurso_chat_config && window.datacurso_chat_config.userrole) {\n                this.userRole = window.datacurso_chat_config.userrole;\n                return;\n            }\n\n            // Verificar si hay elementos que indiquen que es profesor\n            const teacherElements = [\n                '.editing',\n                '[data-role=\"teacher\"]',\n                '.teacher-view',\n                '.course-editing',\n                'body.editing'\n            ];\n\n            for (const selector of teacherElements) {\n                if (document.querySelector(selector)) {\n                    this.userRole = 'Profesor';\n                    return;\n                }\n            }\n\n            // Verificar en el menú de usuario o navegación\n            const userMenu = document.querySelector('.usermenu') || document.querySelector('.user-menu');\n            if (userMenu && userMenu.textContent.toLowerCase().includes('profesor')) {\n                this.userRole = 'Profesor';\n                return;\n            }\n\n            // Verificar permisos de edición\n            if (document.querySelector('a[href*=\"edit=on\"]') ||\n                document.querySelector('.turn-editing-on') ||\n                document.querySelector('.editing-on')) {\n                this.userRole = 'Profesor';\n                return;\n            }\n\n            // Por defecto, asumir que es estudiante\n            this.userRole = 'Estudiante';\n        }\n\n        /**\n         * Crea el widget del chat\n         */\n        createChatWidget() {\n            // Crear el HTML del chat\n            const chatHTML = `\n                <div class=\"datacurso-chat-widget\" id=\"datacursoChat\">\n                    <div class=\"datacurso-chat-header\" id=\"chatHeader\">\n                        <div class=\"datacurso-chat-header-content\">\n                            <h3>Asistente IA</h3>\n                            <span class=\"datacurso-chat-role\" id=\"userRole\">${this.userRole}</span>\n                        </div>\n                        <button class=\"datacurso-chat-toggle\" id=\"toggleBtn\" aria-label=\"Minimizar/Maximizar chat\">-</button>\n                    </div>\n\n                    <div class=\"datacurso-chat-body\" id=\"chatBody\">\n                        <div class=\"datacurso-chat-messages\" id=\"chatMessages\">\n                            <div class=\"datacurso-chat-message ai\">\n                                ¡Hola! Soy tu asistente de IA. ¿En qué puedo ayudarte hoy?\n                            </div>\n                        </div>\n\n                        <div class=\"datacurso-chat-input-container\">\n                            <div class=\"datacurso-chat-input-wrapper\">\n                                <textarea\n                                    class=\"datacurso-chat-input\"\n                                    id=\"chatInput\"\n                                    placeholder=\"Escribe tu mensaje...\"\n                                    rows=\"1\"\n                                    aria-label=\"Mensaje para el asistente IA\"></textarea>\n                                <button id=\"sendBtn\" class=\"datacurso-chat-send\" aria-label=\"Enviar mensaje\">\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                                        <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n                                        <polygon points=\"22,2 15,22 11,13 2,9\"></polygon>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"datacurso-chat-footer\">\n                        Powered by Datacurso IA\n                    </div>\n                    <div class=\"datacurso-chat-overlay\" id=\"chatOverlay\" style=\"display: none;\">\n                        <div class=\"spinner\"></div>\n                    </div>\n                </div>\n            `;\n\n            // Crear elemento y agregarlo al DOM\n            const chatContainer = document.createElement('div');\n            chatContainer.innerHTML = chatHTML;\n            this.chatWidget = chatContainer.firstElementChild;\n\n            // APLICAR ESTADO INICIAL SEGÚN this.isMinimized\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n            } else {\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n            }\n\n            document.body.appendChild(this.chatWidget);\n\n            // Agregar animación de entrada\n            setTimeout(() => {\n                this.chatWidget.classList.add('show');\n            }, 100);\n        }\n\n        /**\n         * Agrega event listeners\n         */\n        addEventListeners() {\n            const header = this.chatWidget.querySelector('#chatHeader');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n            const input = this.chatWidget.querySelector('#chatInput');\n\n            // Toggle chat\n            header.addEventListener('click', () => this.toggleChat());\n\n            // Send message\n            sendBtn.addEventListener('click', () => this.sendMessage());\n\n            // Enter key to send\n            input.addEventListener('keypress', (e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                    e.preventDefault();\n                    this.sendMessage();\n                }\n            });\n\n            // Auto-resize textarea\n            input.addEventListener('input', () => {\n                input.style.height = 'auto';\n                input.style.height = Math.min(input.scrollHeight, 100) + 'px';\n            });\n\n            // Prevent chat from interfering with page interactions\n            this.chatWidget.addEventListener('click', (e) => {\n                e.stopPropagation();\n            });\n        }\n\n        /**\n         * Alterna entre minimizado y maximizado\n         */\n        async toggleChat() {\n            const body = this.chatWidget.querySelector('#chatBody');\n            const toggleBtn = this.chatWidget.querySelector('#toggleBtn');\n            const chatInput = this.chatWidget.querySelector('#chatInput');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n            const overlay = this.chatWidget.querySelector('#chatOverlay');\n\n            if (this.isMinimized) {\n                this.chatWidget.classList.remove('minimized');\n                body.style.display = 'flex';\n                toggleBtn.textContent = '-';\n                toggleBtn.setAttribute('aria-label', 'Minimizar chat');\n                this.isMinimized = false;\n\n                // Estado de carga\n                this.isLoading = true;\n                chatInput.disabled = true;\n                sendBtn.disabled = true;\n                overlay.style.display = 'flex';\n                await chatbotRepository.createCourseContext(this.courseId);\n\n                // Quitar estado de carga\n                this.isLoading = false;\n                chatInput.disabled = false;\n                sendBtn.disabled = false;\n                overlay.style.display = 'none';\n            } else {\n                this.chatWidget.classList.add('minimized');\n                body.style.display = 'none';\n                toggleBtn.textContent = '+';\n                toggleBtn.setAttribute('aria-label', 'Maximizar chat');\n                this.isMinimized = true;\n            }\n        }\n\n        /**\n         * Envía un mensaje\n         */\n        async sendMessage() {\n            const input = this.chatWidget.querySelector('#chatInput');\n            const sendBtn = this.chatWidget.querySelector('#sendBtn');\n\n            const messageText = input.value.trim();\n            if (!messageText) {\n                return;\n            }\n\n            // Deshabilitar botón de envío\n            sendBtn.disabled = true;\n\n            // Agregar mensaje del usuario\n            this.addMessage(messageText, 'user');\n\n            // Limpiar input\n            input.value = '';\n            input.style.height = 'auto';\n\n            // Scroll al final\n            this.scrollToBottom();\n\n            // // Aquí es donde se integraría la lógica de IA\n            // // Por ahora, simular una respuesta\n            this.sendMessageToAI(messageText);\n\n            sendBtn.disabled = false;\n\n            // Rehabilitar botón de envío\n            // setTimeout(() => {\n            //     sendBtn.disabled = false;\n            // }, 1000);\n        }\n\n        /**\n         * Agrega un mensaje al chat\n         */\n\n        addMessage(text, type) {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            const messageElement = document.createElement('div');\n            messageElement.className = `datacurso-chat-message ${type}`;\n            messageElement.textContent = text;\n            messages.appendChild(messageElement);\n            this.scrollToBottom();\n        }\n\n        /**\n         * Simula una respuesta de IA (placeholder para la lógica real)\n         *\n         * @param {string} messageText - El mensaje del usuario\n         */\n        async sendMessageToAI(messageText) {\n            // Mostrar indicador de escritura\n            this.showTypingIndicator();\n            const response = await chatbotRepository.createMod(this.courseId, messageText, 1);\n            this.hideTypingIndicator();\n            this.addMessage(response.message, 'ai');\n            if (response.courseurl) {\n                window.location.href = response.courseurl;\n            }\n        }\n\n        /**\n         * Muestra indicador de escritura\n         */\n        showTypingIndicator() {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            const typingElement = document.createElement('div');\n            typingElement.className = 'datacurso-chat-message ai typing-indicator';\n            typingElement.id = 'typingIndicator';\n            typingElement.innerHTML = '<span></span><span></span><span></span>';\n            messages.appendChild(typingElement);\n            this.scrollToBottom();\n        }\n\n        /**\n         * Oculta indicador de escritura\n         */\n        hideTypingIndicator() {\n            const typingIndicator = this.chatWidget.querySelector('#typingIndicator');\n            if (typingIndicator) {\n                typingIndicator.remove();\n            }\n        }\n\n        /**\n         * Hace scroll al final de los mensajes\n         */\n        scrollToBottom() {\n            const messages = this.chatWidget.querySelector('#chatMessages');\n            messages.scrollTop = messages.scrollHeight;\n        }\n\n        /**\n         * Destruye el chat widget\n         */\n        destroy() {\n            if (this.chatWidget) {\n                this.chatWidget.remove();\n                this.chatWidget = null;\n            }\n        }\n    }\n\n    // Variable global para la instancia del chat\n    let datacursoChatInstance = null;\n\n    return {\n        /**\n         * Inicializa el chat flotante\n         */\n        init: function () {\n            // Asegurar que solo hay una instancia\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n            }\n\n            try {\n                datacursoChatInstance = new DatacursoChat();\n            } catch (error) {\n                notification.exception(error);\n            }\n        },\n\n        /**\n         * Destruye el chat flotante\n         */\n        destroy: function () {\n            if (datacursoChatInstance) {\n                datacursoChatInstance.destroy();\n                datacursoChatInstance = null;\n            }\n        }\n    };\n});\n"],"names":["define","notification","chatbotRepository","DatacursoChat","constructor","chatWidget","isMinimized","userRole","courseId","isInCourseContext","isLoading","init","this","checkCourseContext","detectUserRole","createChatWidget","addEventListeners","window","datacurso_chat_config","courseid","url","location","href","courseMatch","match","modMatch","activityMatch","document","querySelector","courseIdElement","getAttribute","userrole","teacherElements","selector","userMenu","textContent","toLowerCase","includes","chatHTML","chatContainer","createElement","innerHTML","firstElementChild","body","toggleBtn","classList","add","style","display","setAttribute","appendChild","setTimeout","header","sendBtn","input","addEventListener","toggleChat","sendMessage","e","key","shiftKey","preventDefault","height","Math","min","scrollHeight","stopPropagation","chatInput","overlay","remove","disabled","createCourseContext","messageText","value","trim","addMessage","scrollToBottom","sendMessageToAI","text","type","messages","messageElement","className","showTypingIndicator","response","createMod","hideTypingIndicator","message","courseurl","typingElement","id","typingIndicator","scrollTop","destroy","datacursoChatInstance","error","exception"],"mappings":"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"}